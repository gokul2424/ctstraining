07:54:24,990 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@73a1e9a9
07:54:24,994 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@73a1e9a9
07:54:24,995 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a1e9a9
07:54:24,997 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41d477ed
07:54:24,999 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@443118b0
07:54:25,000 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@618b19ad
07:54:25,003 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@411f53a0
07:54:25,003 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@411f53a0
07:54:25,004 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@411f53a0
07:54:25,005 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@3754a4bf
07:54:25,005 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@3754a4bf
07:54:25,006 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3754a4bf
07:54:25,008 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@1d296da
07:54:25,009 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@1d296da
07:54:25,009 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d296da
07:54:25,011 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6c6cb480
07:54:25,013 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6c6cb480
07:54:25,013 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6c6cb480
07:54:25,015 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@38425407
07:54:25,015 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@38425407
07:54:25,016 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38425407
07:54:25,017 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@327514f
07:54:25,018 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@327514f
07:54:25,018 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@327514f
07:54:25,020 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5542c4ed
07:54:25,020 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5542c4ed
07:54:25,020 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5542c4ed
07:54:25,022 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10683d9d
07:54:25,023 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10683d9d
07:54:25,024 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@139982de
07:54:25,025 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@139982de
07:54:25,026 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@31190526
07:54:25,026 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@31190526
07:54:25,028 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@77c2494c
07:54:25,029 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e800aaa
07:54:25,031 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@3b0090a4
07:54:25,031 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b0090a4
07:54:25,034 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@15de0b3c
07:54:25,035 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15de0b3c
07:54:25,036 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@79079097
07:54:25,037 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79079097
07:54:25,039 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3d285d7e
07:54:25,040 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3d285d7e
07:54:25,040 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3d285d7e
07:54:25,042 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@367ffa75
07:54:25,044 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@fbd1f6
07:54:25,045 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fbd1f6
07:54:25,045 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fbd1f6
07:54:25,046 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a8c8dcf
07:54:25,047 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@2a5c8d3f
07:54:25,048 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a5c8d3f
07:54:25,049 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@2925bf5b
07:54:25,050 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2925bf5b
07:54:25,051 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6ad82709
07:54:25,052 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6ad82709
07:54:25,053 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@b2c9a9c
07:54:25,054 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b2c9a9c
07:54:25,056 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24313fcc
07:54:25,057 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24313fcc
07:54:25,058 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a2befb
07:54:25,059 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@38afe297
07:54:25,062 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@7c9d8e2
07:54:25,062 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7c9d8e2
07:54:25,063 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@7c9d8e2
07:54:25,066 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6f4a47c7
07:54:25,067 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6f4a47c7
07:54:25,068 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6f4a47c7
07:54:25,069 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@43c1b556
07:54:25,071 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@4988d8b8
07:54:25,072 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4988d8b8
07:54:25,072 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@4988d8b8
07:54:25,074 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bccb269
07:54:25,074 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bccb269
07:54:25,074 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bccb269
07:54:25,075 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@158a8276
07:54:25,077 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@4e50c791
07:54:25,083 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@561b6512
07:54:25,083 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@561b6512
07:54:25,084 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@445b295b
07:54:25,089 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@291b4bf5
07:54:25,089 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@291b4bf5
07:54:25,093 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@6a2b953e
07:54:25,093 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a2b953e
07:54:25,094 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@548e6d58
07:54:25,095 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@175b9425
07:54:25,097 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@57250572
07:54:25,101 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3f56875e
07:54:25,101 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f56875e
07:54:25,103 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3571b748
07:54:25,103 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e96bacf
07:54:25,103 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@484970b0
07:54:25,104 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4470f8a6
07:54:25,104 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c83dc97
07:54:25,105 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7748410a
07:54:25,105 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@740773a3
07:54:25,107 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@37f1104d
07:54:25,165 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@73a1e9a9
07:54:25,166 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@73a1e9a9
07:54:25,166 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a1e9a9
07:54:25,167 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41d477ed
07:54:25,167 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@443118b0
07:54:25,167 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@618b19ad
07:54:25,168 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@411f53a0
07:54:25,168 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@411f53a0
07:54:25,168 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@411f53a0
07:54:25,169 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@3754a4bf
07:54:25,169 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@3754a4bf
07:54:25,169 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3754a4bf
07:54:25,169 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@1d296da
07:54:25,170 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@1d296da
07:54:25,170 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d296da
07:54:25,171 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6c6cb480
07:54:25,171 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6c6cb480
07:54:25,172 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6c6cb480
07:54:25,172 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@38425407
07:54:25,173 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@38425407
07:54:25,173 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38425407
07:54:25,174 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@327514f
07:54:25,174 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@327514f
07:54:25,174 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@327514f
07:54:25,175 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5542c4ed
07:54:25,175 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5542c4ed
07:54:25,176 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5542c4ed
07:54:25,176 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10683d9d
07:54:25,177 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10683d9d
07:54:25,177 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@139982de
07:54:25,178 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@139982de
07:54:25,178 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@31190526
07:54:25,179 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@31190526
07:54:25,179 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@77c2494c
07:54:25,180 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e800aaa
07:54:25,180 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@3b0090a4
07:54:25,181 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b0090a4
07:54:25,181 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@15de0b3c
07:54:25,182 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15de0b3c
07:54:25,182 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@79079097
07:54:25,183 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79079097
07:54:25,183 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3d285d7e
07:54:25,185 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3d285d7e
07:54:25,185 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3d285d7e
07:54:25,185 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@367ffa75
07:54:25,186 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@fbd1f6
07:54:25,186 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fbd1f6
07:54:25,186 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fbd1f6
07:54:25,187 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a8c8dcf
07:54:25,188 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@2a5c8d3f
07:54:25,188 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a5c8d3f
07:54:25,188 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@2925bf5b
07:54:25,189 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2925bf5b
07:54:25,189 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6ad82709
07:54:25,189 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6ad82709
07:54:25,190 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@b2c9a9c
07:54:25,190 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b2c9a9c
07:54:25,190 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24313fcc
07:54:25,191 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24313fcc
07:54:25,191 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a2befb
07:54:25,191 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@38afe297
07:54:25,191 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@7c9d8e2
07:54:25,192 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7c9d8e2
07:54:25,192 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@7c9d8e2
07:54:25,192 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6f4a47c7
07:54:25,193 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6f4a47c7
07:54:25,193 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6f4a47c7
07:54:25,193 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@43c1b556
07:54:25,194 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@4988d8b8
07:54:25,194 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4988d8b8
07:54:25,194 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@4988d8b8
07:54:25,195 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bccb269
07:54:25,195 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bccb269
07:54:25,196 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bccb269
07:54:25,196 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@158a8276
07:54:25,197 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@4e50c791
07:54:25,199 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@561b6512
07:54:25,199 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@561b6512
07:54:25,200 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@445b295b
07:54:25,200 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@291b4bf5
07:54:25,200 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@291b4bf5
07:54:25,201 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@6a2b953e
07:54:25,201 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a2b953e
07:54:25,201 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@548e6d58
07:54:25,202 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@175b9425
07:54:25,202 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@57250572
07:54:25,202 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3f56875e
07:54:25,203 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f56875e
07:54:25,203 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@33990a0c
07:54:25,203 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4de4b452
07:54:25,204 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@50b5ac82
07:54:25,204 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@101952da
07:54:25,204 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6babf3bf
07:54:25,205 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3059cbc
07:54:25,205 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ea9e1e2
07:54:25,206 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@24fcf36f
07:54:25,870 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@64c63c79
07:54:26,415 TRACE BasicBinder:83 - binding parameter [1] as [INTEGER] - 1
07:54:26,426 TRACE BasicExtractor:72 - Found [Ravi] as column [name2_0_0_]
07:54:26,427 TRACE BasicExtractor:72 - Found [29344.440000000002] as column [salary3_0_0_]
07:54:26,451 TRACE BasicBinder:83 - binding parameter [1] as [VARCHAR] - Ravi
07:54:26,452 TRACE BasicBinder:83 - binding parameter [2] as [DOUBLE] - 34344.44
07:54:26,453 TRACE BasicBinder:83 - binding parameter [3] as [INTEGER] - 1
07:57:28,370 DEBUG SpringJUnit4ClassRunner:106 - SpringJUnit4ClassRunner constructor called with [class test.java.TestEmployee].
07:57:28,440 DEBUG AbstractDelegatingSmartContextLoader:90 - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@6fffcba5 declaringClass = 'test.java.TestEmployee', classes = '{}', locations = '{classpath:beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
07:57:28,443 DEBUG ContextLoaderUtils:471 - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [test.java.TestEmployee]
07:57:28,446 DEBUG TestContextManager:186 - @TestExecutionListeners is not present for class [test.java.TestEmployee]: using defaults.
07:57:28,467 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:57:28,467 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:57:28,481 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:57:28,481 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:57:28,482 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:57:28,483 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:57:28,483 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:57:28,484 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:57:28,485 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:57:28,485 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:57:28,488 DEBUG DependencyInjectionTestExecutionListener:73 - Performing dependency injection for test context [[TestContext@2ed94a8b testClass = TestEmployee, testInstance = test.java.TestEmployee@38082d64, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
07:57:28,489 DEBUG AbstractDelegatingSmartContextLoader:100 - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
07:57:28,492 DEBUG AbstractGenericContextLoader:104 - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
07:57:28,589 DEBUG StandardEnvironment:108 - Adding [systemProperties] PropertySource with lowest search precedence
07:57:28,591 DEBUG StandardEnvironment:108 - Adding [systemEnvironment] PropertySource with lowest search precedence
07:57:28,592 DEBUG StandardEnvironment:127 - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
07:57:28,605  INFO XmlBeanDefinitionReader:316 - Loading XML bean definitions from class path resource [beans.xml]
07:57:28,627 DEBUG DefaultDocumentLoader:72 - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
07:57:28,671 DEBUG PluggableSchemaResolver:140 - Loading schema mappings from [META-INF/spring.schemas]
07:57:28,677 DEBUG PluggableSchemaResolver:146 - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
07:57:28,678 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
07:57:28,740 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.2.xsd
07:57:28,746 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
07:57:28,754 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.2.xsd
07:57:28,777 DEBUG DefaultBeanDefinitionDocumentReader:99 - Loading bean definitions
07:57:28,796 DEBUG DefaultNamespaceHandlerResolver:156 - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
07:57:28,860 DEBUG PathMatchingResourcePatternResolver:553 - Looking for matching resources in directory tree [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant]
07:57:28,861 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:57:28,865 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:57:28,866 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:57:28,867 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:57:28,870 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/entity] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:57:28,871 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/exception] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:57:28,872 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:57:28,874 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/vo] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:57:28,877 DEBUG PathMatchingResourcePatternResolver:354 - Resolved location pattern [classpath*:com/cognizant/*/**/*.class] to resources [file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo/EmployeeBO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/ApplicationController.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/EmployeeController.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/ApplicationDAO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/EmployeeDAO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/entity/Employee.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/exception/ApplicationException.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/ApplicationService.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/EmployeeService.class]]
07:57:28,918 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo/EmployeeBO.class]
07:57:28,927 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/EmployeeController.class]
07:57:28,930 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/EmployeeDAO.class]
07:57:28,933 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/EmployeeService.class]
07:57:28,968 DEBUG BeanDefinitionParserDelegate:494 - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3]
07:57:28,972 DEBUG XmlBeanDefinitionReader:216 - Loaded 17 bean definitions from location pattern [classpath:beans.xml]
07:57:28,981  INFO GenericApplicationContext:515 - Refreshing org.springframework.context.support.GenericApplicationContext@13c78c0b: startup date [Wed May 31 07:57:28 IST 2017]; root of context hierarchy
07:57:28,982 DEBUG GenericApplicationContext:545 - Bean factory for org.springframework.context.support.GenericApplicationContext@13c78c0b: org.springframework.beans.factory.support.DefaultListableBeanFactory@de3a06f: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager]; root of factory hierarchy
07:57:29,008 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
07:57:29,009 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
07:57:29,032 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
07:57:29,035 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
07:57:29,083 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
07:57:29,084 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
07:57:29,084 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
07:57:29,085 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
07:57:29,085 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
07:57:29,086 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
07:57:29,086 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
07:57:29,087 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
07:57:29,087 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
07:57:29,089 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
07:57:29,098 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
07:57:29,099 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
07:57:29,099 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
07:57:29,100 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
07:57:29,100 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
07:57:29,101 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
07:57:29,101 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
07:57:29,101 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
07:57:29,102 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
07:57:29,102 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
07:57:29,102 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
07:57:29,103 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
07:57:29,123 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
07:57:29,162 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
07:57:29,163 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'messageSource'
07:57:29,163 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'messageSource'
07:57:29,168 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'messageSource' to allow for resolving potential circular references
07:57:29,175 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:29,176 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:29,177 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
07:57:29,195 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:57:29,196 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:57:29,198 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
07:57:29,201 DEBUG BeanFactoryAdvisorRetrievalHelper:87 - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:29,215 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:57:29,220 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:29,235 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'messageSource'
07:57:29,235 DEBUG GenericApplicationContext:802 - Using MessageSource [org.springframework.context.support.ReloadableResourceBundleMessageSource: basenames=[]]
07:57:29,238 DEBUG GenericApplicationContext:836 - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1c93084c]
07:57:29,241 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'entityManagerFactory'
07:57:29,241 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'entityManagerFactory'
07:57:29,253 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
07:57:29,261 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'dataSource'
07:57:29,262 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'dataSource'
07:57:29,266 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
07:57:29,278  INFO DriverManagerDataSource:153 - Loaded JDBC driver: com.mysql.jdbc.Driver
07:57:29,279 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:29,281 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'dataSource'
07:57:29,281 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3'
07:57:29,291 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:29,292 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3'
07:57:29,297 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
07:57:29,308  INFO LocalContainerEntityManagerFactoryBean:287 - Building JPA container EntityManagerFactory for persistence unit 'jpaData'
07:57:29,360 DEBUG logging:143 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
07:57:29,398 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
07:57:29,399 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
07:57:29,399 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@33d512c1
07:57:29,401 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@765d7657
07:57:29,403 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@51399530
07:57:29,404 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b71e916
07:57:29,409 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
07:57:29,409 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
07:57:29,410 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@175c2241
07:57:29,411 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7c7a06ec
07:57:29,412 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7c7a06ec
07:57:29,413 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c7a06ec
07:57:29,417 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
07:57:29,418 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
07:57:29,419 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@206a70ef
07:57:29,423 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@34e9fd99
07:57:29,424 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@34e9fd99
07:57:29,424 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34e9fd99
07:57:29,427 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
07:57:29,432 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
07:57:29,432 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@40a4337a
07:57:29,435 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
07:57:29,436 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
07:57:29,436 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7586beff
07:57:29,440 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
07:57:29,440 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
07:57:29,441 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e6f74c
07:57:29,443 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@385c9627
07:57:29,444 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@385c9627
07:57:29,448 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@229f66ed
07:57:29,448 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@229f66ed
07:57:29,450 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@477b4cdf
07:57:29,451 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@477b4cdf
07:57:29,452 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5bda8e08
07:57:29,455 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@179ece50
07:57:29,456 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@4116aac9
07:57:29,457 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4116aac9
07:57:29,459 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7c6908d7
07:57:29,460 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c6908d7
07:57:29,463 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@bcec361
07:57:29,464 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bcec361
07:57:29,467 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@49438269
07:57:29,467 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@49438269
07:57:29,468 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@49438269
07:57:29,471 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55fe41ea
07:57:29,473 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@24269709
07:57:29,473 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24269709
07:57:29,474 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24269709
07:57:29,475 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a52dba3
07:57:29,476 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@45c7e403
07:57:29,478 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45c7e403
07:57:29,479 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@61322f9d
07:57:29,480 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61322f9d
07:57:29,482 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2362f559
07:57:29,482 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2362f559
07:57:29,484 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@544fa968
07:57:29,485 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@544fa968
07:57:29,489 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6c40365c
07:57:29,490 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6c40365c
07:57:29,491 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@55b0dcab
07:57:29,492 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37ceb1df
07:57:29,494 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@69453e37
07:57:29,495 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@69453e37
07:57:29,495 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@69453e37
07:57:29,498 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4009e306
07:57:29,499 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4009e306
07:57:29,500 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4009e306
07:57:29,502 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@63475ace
07:57:29,503 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@66d18979
07:57:29,504 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@66d18979
07:57:29,504 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@66d18979
07:57:29,506 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13b6aecc
07:57:29,506 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13b6aecc
07:57:29,507 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13b6aecc
07:57:29,508 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1e66f1f5
07:57:29,509 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@394df057
07:57:29,515 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@49e5f737
07:57:29,516 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49e5f737
07:57:29,517 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@687e99d8
07:57:29,521 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@424e1977
07:57:29,522 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@424e1977
07:57:29,525 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@623a8092
07:57:29,526 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@623a8092
07:57:29,527 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3098cf3b
07:57:29,528 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21b2e768
07:57:29,530 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@68567e20
07:57:29,535 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3e96bacf
07:57:29,536 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e96bacf
07:57:29,537 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c83dc97
07:57:29,537 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7748410a
07:57:29,538 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@740773a3
07:57:29,538 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@37f1104d
07:57:29,539 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55740540
07:57:29,539 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60015ef5
07:57:29,540 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f54a33d
07:57:29,540 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1018bde2
07:57:29,559  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
07:57:29,566  INFO Version:41 - HHH000412: Hibernate Core {4.2.0.Final}
07:57:29,569  INFO Environment:239 - HHH000206: hibernate.properties not found
07:57:29,573  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
07:57:29,587 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
07:57:29,588 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
07:57:29,588 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
07:57:29,589 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
07:57:29,590 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
07:57:29,591 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
07:57:29,593 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
07:57:29,594 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
07:57:29,595 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
07:57:29,596 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
07:57:29,597 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
07:57:29,598 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
07:57:29,598 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
07:57:29,599 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
07:57:29,600 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
07:57:29,603 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
07:57:29,604 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
07:57:29,604 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@33d512c1
07:57:29,605 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@765d7657
07:57:29,605 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@51399530
07:57:29,606 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b71e916
07:57:29,606 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
07:57:29,607 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
07:57:29,607 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@175c2241
07:57:29,608 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7c7a06ec
07:57:29,608 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7c7a06ec
07:57:29,609 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c7a06ec
07:57:29,610 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
07:57:29,610 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
07:57:29,611 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@206a70ef
07:57:29,611 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@34e9fd99
07:57:29,612 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@34e9fd99
07:57:29,612 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34e9fd99
07:57:29,614 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
07:57:29,615 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
07:57:29,616 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@40a4337a
07:57:29,617 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
07:57:29,617 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
07:57:29,618 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7586beff
07:57:29,618 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
07:57:29,618 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
07:57:29,619 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e6f74c
07:57:29,620 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@385c9627
07:57:29,623 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@385c9627
07:57:29,628 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@229f66ed
07:57:29,628 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@229f66ed
07:57:29,629 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@477b4cdf
07:57:29,630 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@477b4cdf
07:57:29,632 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5bda8e08
07:57:29,633 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@179ece50
07:57:29,636 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@4116aac9
07:57:29,637 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4116aac9
07:57:29,637 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7c6908d7
07:57:29,638 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c6908d7
07:57:29,639 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@bcec361
07:57:29,639 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bcec361
07:57:29,640 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@49438269
07:57:29,640 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@49438269
07:57:29,641 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@49438269
07:57:29,641 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55fe41ea
07:57:29,642 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@24269709
07:57:29,642 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24269709
07:57:29,643 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24269709
07:57:29,643 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a52dba3
07:57:29,644 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@45c7e403
07:57:29,644 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45c7e403
07:57:29,645 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@61322f9d
07:57:29,646 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61322f9d
07:57:29,647 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2362f559
07:57:29,647 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2362f559
07:57:29,648 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@544fa968
07:57:29,648 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@544fa968
07:57:29,652 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6c40365c
07:57:29,652 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6c40365c
07:57:29,653 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@55b0dcab
07:57:29,653 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37ceb1df
07:57:29,654 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@69453e37
07:57:29,654 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@69453e37
07:57:29,655 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@69453e37
07:57:29,655 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4009e306
07:57:29,656 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4009e306
07:57:29,656 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4009e306
07:57:29,657 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@63475ace
07:57:29,657 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@66d18979
07:57:29,657 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@66d18979
07:57:29,658 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@66d18979
07:57:29,658 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13b6aecc
07:57:29,658 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13b6aecc
07:57:29,659 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13b6aecc
07:57:29,659 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1e66f1f5
07:57:29,660 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@394df057
07:57:29,660 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@49e5f737
07:57:29,660 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49e5f737
07:57:29,660 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@687e99d8
07:57:29,661 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@424e1977
07:57:29,661 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@424e1977
07:57:29,661 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@623a8092
07:57:29,662 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@623a8092
07:57:29,662 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3098cf3b
07:57:29,662 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21b2e768
07:57:29,663 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@68567e20
07:57:29,663 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3e96bacf
07:57:29,664 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e96bacf
07:57:29,664 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6babf3bf
07:57:29,664 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3059cbc
07:57:29,665 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7ea9e1e2
07:57:29,665 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@24fcf36f
07:57:29,665 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10feca44
07:57:29,666 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fb1549b
07:57:29,666 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ea6147e
07:57:29,667 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d02f94e
07:57:29,667 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
07:57:29,668 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
07:57:29,668 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
07:57:29,668 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
07:57:29,669 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
07:57:29,669 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
07:57:29,669 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
07:57:29,670 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
07:57:29,670 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
07:57:29,670 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
07:57:29,671 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
07:57:29,671 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
07:57:29,672 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
07:57:29,672 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
07:57:29,673 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
07:57:29,676 DEBUG Ejb3Configuration:527 - Processing PersistenceUnitInfo [
	name: jpaData
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@3cd1a2f1
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7a419da4
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@14555e0a
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties []
07:57:29,680 DEBUG Ejb3Configuration:850 - Detect class: true; detect hbm: true
07:57:29,681 DEBUG Ejb3Configuration:850 - Detect class: true; detect hbm: true
07:57:29,690 DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes
07:57:29,690 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.bo.EmployeeBO
07:57:29,724 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.controller.ApplicationController
07:57:29,724 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.controller.EmployeeController
07:57:29,726 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.dao.ApplicationDAO
07:57:29,726 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.dao.EmployeeDAO
07:57:29,727 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.entity.Employee
07:57:29,728 DEBUG AbstractJarVisitor:223 - Java element filter matched for com.cognizant.entity.Employee
07:57:29,729 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.exception.ApplicationException
07:57:29,730 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.service.ApplicationService
07:57:29,731 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.service.EmployeeService
07:57:29,732 DEBUG AbstractJarVisitor:172 - Filtering: test.java.TestEmployee
07:57:29,748 DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
07:57:29,748 DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
07:57:29,764 DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
07:57:29,773 DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
07:57:29,792 DEBUG Configuration:3416 - Processing hbm.xml files
07:57:29,792 DEBUG Configuration:3446 - Process annotated classes
07:57:29,799 DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.cognizant.entity.Employee
07:57:29,821 DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
07:57:29,827 DEBUG EntityBinder:394 - Import with entity name Employee
07:57:29,833 DEBUG EntityBinder:564 - Bind entity com.cognizant.entity.Employee on table Employee
07:57:29,856 DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=id, insertable=true, updatable=true, unique=false}
07:57:29,860 DEBUG PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
07:57:29,870 DEBUG SimpleValueBinder:331 - building SimpleValue for id
07:57:29,874 DEBUG PropertyBinder:260 - Building property id
07:57:29,878 DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=name, insertable=true, updatable=true, unique=false}
07:57:29,878 DEBUG PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
07:57:29,879 DEBUG SimpleValueBinder:331 - building SimpleValue for name
07:57:29,879 DEBUG PropertyBinder:260 - Building property name
07:57:29,880 DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=salary, insertable=true, updatable=true, unique=false}
07:57:29,881 DEBUG PropertyBinder:179 - MetadataSourceProcessor property salary with lazy=false
07:57:29,882 DEBUG SimpleValueBinder:331 - building SimpleValue for salary
07:57:29,882 DEBUG PropertyBinder:260 - Building property salary
07:57:29,884 DEBUG SimpleValueBinder:369 - Setting SimpleValue typeName for id
07:57:29,884 DEBUG SimpleValueBinder:369 - Setting SimpleValue typeName for name
07:57:29,885 DEBUG SimpleValueBinder:369 - Setting SimpleValue typeName for salary
07:57:29,886 DEBUG Configuration:1406 - Processing fk mappings (*ToOne and JoinedSubclass)
07:57:29,887 DEBUG Configuration:1585 - Processing extends queue
07:57:29,888 DEBUG Configuration:1643 - Processing extends queue
07:57:29,888 DEBUG Configuration:1588 - Processing collection mappings
07:57:29,888 DEBUG Configuration:1598 - Processing native query and ResultSetMapping mappings
07:57:29,889 DEBUG Configuration:1606 - Processing association property references
07:57:29,889 DEBUG Configuration:1628 - Creating tables' unique integer identifiers
07:57:29,889 DEBUG Configuration:1629 - Processing foreign key constraints
07:57:29,899  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
07:57:29,921 DEBUG DriverManagerDataSource:162 - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/cogdb]
07:57:30,206 DEBUG JdbcServicesImpl:121 - Database ->
       name : MySQL
    version : 5.7.14
      major : 5
      minor : 7
07:57:30,207 DEBUG JdbcServicesImpl:127 - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
07:57:30,208 DEBUG JdbcServicesImpl:133 - JDBC version : 3.0
07:57:30,238  INFO Dialect:128 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
07:57:30,246  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
07:57:30,262 DEBUG SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
07:57:30,262 DEBUG SettingsFactory:120 - Automatic session close at end of transaction: disabled
07:57:30,263 DEBUG SettingsFactory:131 - JDBC batch size: 15
07:57:30,263 DEBUG SettingsFactory:137 - JDBC batch updates for versioned data: disabled
07:57:30,263 DEBUG SettingsFactory:147 - Scrollable result sets: enabled
07:57:30,263 DEBUG SettingsFactory:153 - Wrap result sets: disabled
07:57:30,264 DEBUG SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
07:57:30,264 DEBUG SettingsFactory:171 - multi-tenancy strategy : NONE
07:57:30,264 DEBUG SettingsFactory:177 - Connection release mode: auto
07:57:30,265  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
07:57:30,268 DEBUG SettingsFactory:199 - Using BatchFetchStyle : LEGACY
07:57:30,269 DEBUG SettingsFactory:218 - Maximum outer join fetch depth: 2
07:57:30,269 DEBUG SettingsFactory:224 - Default batch fetch size: 1
07:57:30,269 DEBUG SettingsFactory:230 - Generate SQL with comments: disabled
07:57:30,270 DEBUG SettingsFactory:236 - Order SQL updates by primary key: disabled
07:57:30,270 DEBUG SettingsFactory:242 - Order SQL inserts for batching: disabled
07:57:30,271 DEBUG SettingsFactory:250 - Default null ordering: none
07:57:30,272 DEBUG SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
07:57:30,273  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
07:57:30,274 DEBUG SettingsFactory:260 - Query language substitutions: {}
07:57:30,274 DEBUG SettingsFactory:266 - JPA-QL strict compliance: enabled
07:57:30,274 DEBUG SettingsFactory:274 - Second-level cache: enabled
07:57:30,275 DEBUG SettingsFactory:280 - Query cache: disabled
07:57:30,275 DEBUG SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
07:57:30,276 DEBUG SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
07:57:30,276 DEBUG SettingsFactory:295 - Optimize cache for minimal puts: disabled
07:57:30,276 DEBUG SettingsFactory:310 - Structured second-level cache entries: disabled
07:57:30,276 DEBUG SettingsFactory:320 - Second-level cache direct-reference entries: disabled
07:57:30,277 DEBUG SettingsFactory:328 - Statistics: disabled
07:57:30,277 DEBUG SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
07:57:30,277 DEBUG SettingsFactory:358 - Default entity-mode: pojo
07:57:30,277 DEBUG SettingsFactory:364 - Named query checking : enabled
07:57:30,277 DEBUG SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
07:57:30,278 DEBUG SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
07:57:30,278 DEBUG SettingsFactory:398 - JTA Track by Thread: enabled
07:57:30,285 DEBUG SessionFactoryImpl:225 - Building session factory
07:57:30,291 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@6bffbc6d
07:57:30,292 DEBUG SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
07:57:30,293 DEBUG SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Mac OS X, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/classes, user.country.format=IN, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_101-b13, hibernate.connection.autocommit=true, user.name=puneetvashisht, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, user.language=en, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib, java.version=1.8.0_101, user.timezone=Asia/Kolkata, sun.arch.data.model=64, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, hibernate.format_sql=false, java.class.version=52.0, user.country=US, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre, java.vm.info=mixed mode, os.version=10.12.4, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@14555e0a, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=25.101-b13, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.io.unicode.encoding=UnicodeBig, awt.toolkit=sun.lwawt.macosx.LWCToolkit, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, user.home=/Users/puneetvashisht, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=select, java.library.path=/Users/puneetvashisht/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor.url=http://java.oracle.com/, java.vm.vendor=Oracle Corporation, gopherProxySet=false, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 53838 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames test.java.TestEmployee, java.class.path=/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/test-classes:/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes:/Users/puneetvashisht/.p2/pool/plugins/org.junit_4.12.0.v201504281640/junit.jar:/Users/puneetvashisht/.p2/pool/plugins/org.hamcrest.core_1.3.0.v201303031735.jar:/Users/puneetvashisht/.m2/repository/org/hibernate/hibernate-entitymanager/4.2.0.Final/hibernate-entitymanager-4.2.0.Final.jar:/Users/puneetvashisht/.m2/repository/org/jboss/logging/jboss-logging/3.1.0.GA/jboss-logging-3.1.0.GA.jar:/Users/puneetvashisht/.m2/repository/org/hibernate/hibernate-core/4.2.0.Final/hibernate-core-4.2.0.Final.jar:/Users/puneetvashisht/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/puneetvashisht/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.1_spec/1.0.0.Final/jboss-transaction-api_1.1_spec-1.0.0.Final.jar:/Users/puneetvashisht/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/puneetvashisht/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar:/Users/puneetvashisht/.m2/repository/org/javassist/javassist/3.15.0-GA/javassist-3.15.0-GA.jar:/Users/puneetvashisht/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.1.Final/hibernate-commons-annotations-4.0.1.Final.jar:/Users/puneetvashisht/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/puneetvashisht/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-test/3.2.16.RELEASE/spring-test-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-core/3.2.16.RELEASE/spring-core-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-orm/3.2.16.RELEASE/spring-orm-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-beans/3.2.16.RELEASE/spring-beans-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-jdbc/3.2.16.RELEASE/spring-jdbc-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-tx/3.2.16.RELEASE/spring-tx-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-web/3.2.16.RELEASE/spring-web-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-aop/3.2.16.RELEASE/spring-aop-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-context/3.2.16.RELEASE/spring-context-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-webmvc/3.2.16.RELEASE/spring-webmvc-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-expression/3.2.16.RELEASE/spring-expression-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/mysql/mysql-connector-java/5.1.6/mysql-connector-java-5.1.6.jar:/Users/puneetvashisht/eclipse/jee-neon/Eclipse.app/Contents/Eclipse/configuration/org.eclipse.osgi/387/0/.cp/:/Users/puneetvashisht/eclipse/jee-neon/Eclipse.app/Contents/Eclipse/configuration/org.eclipse.osgi/386/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=unknown, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, java.io.tmpdir=/var/folders/pp/0stdpsvj1n16sc84yhk4v4l40000gn/T/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=x86_64, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.ext.dirs=/Users/puneetvashisht/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, user.dir=/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.8, hibernate.show_sql=true}
07:57:30,350 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.MySQLDialect]
07:57:30,487 DEBUG AbstractEntityPersister:3582 - Static SQL for entity: com.cognizant.entity.Employee
07:57:30,488 DEBUG AbstractEntityPersister:3587 -  Version select: select id from Employee where id =?
07:57:30,488 DEBUG AbstractEntityPersister:3590 -  Snapshot select: select employee_.id, employee_.name as name2_0_, employee_.salary as salary3_0_ from Employee employee_ where employee_.id=?
07:57:30,489 DEBUG AbstractEntityPersister:3593 -  Insert 0: insert into Employee (name, salary, id) values (?, ?, ?)
07:57:30,489 DEBUG AbstractEntityPersister:3594 -  Update 0: update Employee set name=?, salary=? where id=?
07:57:30,490 DEBUG AbstractEntityPersister:3595 -  Delete 0: delete from Employee where id=?
07:57:30,490 DEBUG AbstractEntityPersister:3598 -  Identity insert: insert into Employee (name, salary) values (?, ?)
07:57:30,522 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [NONE]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:57:30,522 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [READ]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:57:30,523 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [UPGRADE]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=? for update
07:57:30,524 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [UPGRADE_NOWAIT]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=? for update
07:57:30,524 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [FORCE]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=? for update
07:57:30,526 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [PESSIMISTIC_READ]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=? lock in share mode
07:57:30,527 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [PESSIMISTIC_WRITE]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=? for update
07:57:30,527 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [PESSIMISTIC_FORCE_INCREMENT]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=? for update
07:57:30,528 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [OPTIMISTIC]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:57:30,529 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [OPTIMISTIC_FORCE_INCREMENT]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:57:30,536 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.cognizant.entity.Employee: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:57:30,536 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.cognizant.entity.Employee: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:57:30,541 DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1ae67cad
07:57:30,541 DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: 6bfe537c-7e25-4e66-88f6-60687305b031 (<unnamed>)
07:57:30,542 DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
07:57:30,542 DEBUG SessionFactoryImpl:488 - Instantiated session factory
07:57:30,543 DEBUG SessionFactoryImpl:1060 - Checking 0 named HQL queries
07:57:30,544 DEBUG SessionFactoryImpl:1083 - Checking 0 named SQL queries
07:57:30,553 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
07:57:30,597 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@4febb875
07:57:30,597 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: jpaData 
07:57:30,605 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:30,611 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'entityManagerFactory'
07:57:30,612  INFO DefaultListableBeanFactory:603 - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@de3a06f: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
07:57:30,613 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
07:57:30,613 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:57:30,613 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:57:30,614 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:57:30,620 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
07:57:30,624 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:57:30,628 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:57:30,628 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:57:30,629 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:30,629 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
07:57:30,629 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
07:57:30,630 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
07:57:30,630 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
07:57:30,630 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
07:57:30,630 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeBO'
07:57:30,631 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeBO'
07:57:30,641 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.bo.EmployeeBO]: AutowiredFieldElement for private com.cognizant.dao.EmployeeDAO com.cognizant.bo.EmployeeBO.employeeDAO
07:57:30,641 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeBO' to allow for resolving potential circular references
07:57:30,643 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeBO': AutowiredFieldElement for private com.cognizant.dao.EmployeeDAO com.cognizant.bo.EmployeeBO.employeeDAO
07:57:30,645 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeDAO'
07:57:30,647 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeDAO'
07:57:30,655 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.dao.EmployeeDAO]: PersistenceElement for private javax.persistence.EntityManager com.cognizant.dao.EmployeeDAO.em
07:57:30,656 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeDAO' to allow for resolving potential circular references
07:57:30,657 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeDAO': PersistenceElement for private javax.persistence.EntityManager com.cognizant.dao.EmployeeDAO.em
07:57:30,658 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
07:57:30,659 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:30,672 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:30,677 DEBUG AnnotationTransactionAttributeSource:107 - Adding transactional method 'EmployeeDAO.addEmployee' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
07:57:30,685 DEBUG InfrastructureAdvisorAutoProxyCreator:540 - Creating implicit proxy for bean 'employeeDAO' with 0 common interceptors and 1 specific interceptors
07:57:30,692 DEBUG CglibAopProxy:156 - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.cognizant.dao.EmployeeDAO@556d0826]
07:57:30,763 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:57:30,766 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.util.List com.cognizant.dao.EmployeeDAO.findEmployeesBySalary(double)
07:57:30,767 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public com.cognizant.entity.Employee com.cognizant.dao.EmployeeDAO.incrementSalary(int,double)
07:57:30,767 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public void com.cognizant.dao.EmployeeDAO.addEmployee(com.cognizant.entity.Employee)
07:57:30,767 DEBUG CglibAopProxy:761 - Found finalize() method - using NO_OVERRIDE
07:57:30,768 DEBUG CglibAopProxy:773 - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
07:57:30,768 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
07:57:30,768 DEBUG CglibAopProxy:778 - Found 'hashCode' method: public native int java.lang.Object.hashCode()
07:57:30,769 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
07:57:30,769 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
07:57:30,770 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
07:57:30,770 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
07:57:30,770 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
07:57:30,771 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:57:30,771 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:57:30,771 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
07:57:30,772 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
07:57:30,772 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
07:57:30,772 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
07:57:30,772 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
07:57:30,773 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
07:57:30,773 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
07:57:30,773 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
07:57:30,774 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
07:57:30,775 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
07:57:30,775 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
07:57:30,775 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
07:57:30,776 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
07:57:30,776 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:57:30,777 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
07:57:30,777 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
07:57:30,777 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
07:57:30,802 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeDAO'
07:57:30,803 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeBO' to bean named 'employeeDAO'
07:57:30,803 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:30,804 DEBUG AnnotationTransactionAttributeSource:107 - Adding transactional method 'EmployeeBO.incrementSalary' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
07:57:30,804 DEBUG InfrastructureAdvisorAutoProxyCreator:540 - Creating implicit proxy for bean 'employeeBO' with 0 common interceptors and 1 specific interceptors
07:57:30,805 DEBUG CglibAopProxy:156 - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.cognizant.bo.EmployeeBO@42f3156d]
07:57:30,806 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public void com.cognizant.bo.EmployeeBO.addEmployees(java.util.List) throws java.lang.Exception
07:57:30,807 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.util.List com.cognizant.bo.EmployeeBO.findEmployeesBySalary(double)
07:57:30,807 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public com.cognizant.entity.Employee com.cognizant.bo.EmployeeBO.incrementSalary(int,double) throws java.lang.Exception
07:57:30,808 DEBUG CglibAopProxy:761 - Found finalize() method - using NO_OVERRIDE
07:57:30,808 DEBUG CglibAopProxy:773 - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
07:57:30,809 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
07:57:30,809 DEBUG CglibAopProxy:778 - Found 'hashCode' method: public native int java.lang.Object.hashCode()
07:57:30,809 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
07:57:30,809 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
07:57:30,810 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
07:57:30,810 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
07:57:30,810 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
07:57:30,810 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:57:30,810 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:57:30,810 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
07:57:30,811 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
07:57:30,811 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
07:57:30,811 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
07:57:30,811 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
07:57:30,811 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
07:57:30,811 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
07:57:30,811 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
07:57:30,812 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
07:57:30,812 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
07:57:30,812 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
07:57:30,812 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
07:57:30,813 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
07:57:30,813 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:57:30,813 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
07:57:30,813 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
07:57:30,813 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
07:57:30,827 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeBO'
07:57:30,828 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeController'
07:57:30,828 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeController'
07:57:30,832 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.controller.EmployeeController]: AutowiredFieldElement for com.cognizant.service.EmployeeService com.cognizant.controller.EmployeeController.service
07:57:30,833 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeController' to allow for resolving potential circular references
07:57:30,834 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeController': AutowiredFieldElement for com.cognizant.service.EmployeeService com.cognizant.controller.EmployeeController.service
07:57:30,835 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeService'
07:57:30,835 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeService'
07:57:30,836 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.service.EmployeeService]: AutowiredFieldElement for com.cognizant.bo.EmployeeBO com.cognizant.service.EmployeeService.bo
07:57:30,836 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeService' to allow for resolving potential circular references
07:57:30,838 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeService': AutowiredFieldElement for com.cognizant.bo.EmployeeBO com.cognizant.service.EmployeeService.bo
07:57:30,839 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeBO'
07:57:30,839 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeService' to bean named 'employeeBO'
07:57:30,839 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:30,840 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeService'
07:57:30,840 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeController' to bean named 'employeeService'
07:57:30,840 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:30,842 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeController'
07:57:30,843 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeDAO'
07:57:30,843 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeService'
07:57:30,843 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'messageSource'
07:57:30,843 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'dataSource'
07:57:30,843 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
07:57:30,844 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'transactionManager'
07:57:30,844 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'transactionManager'
07:57:30,853 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
07:57:30,860 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
07:57:30,862 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'transactionManager'
07:57:30,869 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:30,871 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'transactionManager'
07:57:30,872 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
07:57:30,874 DEBUG GenericApplicationContext:863 - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7c7d3c46]
07:57:30,877 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'lifecycleProcessor'
07:57:30,886 DEBUG PropertySourcesPropertyResolver:81 - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
07:57:30,886 DEBUG PropertySourcesPropertyResolver:81 - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
07:57:30,887 DEBUG PropertySourcesPropertyResolver:103 - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
07:57:30,888 DEBUG CacheAwareContextLoaderDelegate:97 - Storing ApplicationContext in cache under key [[MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
07:57:30,889 DEBUG cache:114 - Spring test ApplicationContext cache statistics: [ContextCache@5049d8b2 size = 1, hitCount = 0, missCount = 1, parentContextCount = 0]
07:57:30,891 DEBUG InjectionMetadata:86 - Processing injected element of bean 'test.java.TestEmployee': AutowiredFieldElement for com.cognizant.service.EmployeeService test.java.TestEmployee.service
07:57:30,892 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeService'
07:57:30,892 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'test.java.TestEmployee' to bean named 'employeeService'
07:57:30,892 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:57:30,900 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'transactionManager'
07:57:30,907 DEBUG JpaTransactionManager:366 - Creating new transaction with name [com.cognizant.bo.EmployeeBO.incrementSalary]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
07:57:30,968 DEBUG JpaTransactionManager:368 - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@1d9bec4d] for JPA transaction
07:57:30,970 DEBUG AbstractTransactionImpl:158 - begin
07:57:30,971 DEBUG LogicalConnectionImpl:212 - Obtaining JDBC connection
07:57:30,971 DEBUG DriverManagerDataSource:162 - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/cogdb]
07:57:30,996 DEBUG LogicalConnectionImpl:218 - Obtained JDBC connection
07:57:30,997 DEBUG JdbcTransaction:69 - initial autocommit status: true
07:57:30,997 DEBUG JdbcTransaction:71 - disabling autocommit
07:57:31,001 DEBUG JpaTransactionManager:400 - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@64bc21ac]
07:57:31,069 DEBUG Loader:2099 - Loading entity: [com.cognizant.entity.Employee#1]
07:57:31,079 DEBUG SQL:104 - select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:57:31,106 TRACE BasicBinder:83 - binding parameter [1] as [INTEGER] - 1
07:57:31,108 DEBUG Loader:939 - Result set row: 0
07:57:31,109 DEBUG Loader:1471 - Result row: EntityKey[com.cognizant.entity.Employee#1]
07:57:31,118 TRACE BasicExtractor:72 - Found [Ravi] as column [name2_0_0_]
07:57:31,119 TRACE BasicExtractor:72 - Found [34344.44] as column [salary3_0_0_]
07:57:31,121 DEBUG TwoPhaseLoad:157 - Resolving associations for [com.cognizant.entity.Employee#1]
07:57:31,124 DEBUG TwoPhaseLoad:276 - Done materializing entity [com.cognizant.entity.Employee#1]
07:57:31,126 DEBUG Loader:2123 - Done entity load
07:57:31,127 DEBUG JpaTransactionManager:753 - Initiating transaction commit
07:57:31,127 DEBUG JpaTransactionManager:509 - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@1d9bec4d]
07:57:31,128 DEBUG AbstractTransactionImpl:173 - committing
07:57:31,129 DEBUG AbstractFlushingEventListener:143 - Processing flush-time cascades
07:57:31,132 DEBUG AbstractFlushingEventListener:184 - Dirty checking collections
07:57:31,138 DEBUG AbstractFlushingEventListener:117 - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
07:57:31,139 DEBUG AbstractFlushingEventListener:124 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
07:57:31,140 DEBUG EntityPrinter:114 - Listing entities:
07:57:31,141 DEBUG EntityPrinter:121 - com.cognizant.entity.Employee{name=Ravi, id=1, salary=39344.44}
07:57:31,150 DEBUG SQL:104 - update Employee set name=?, salary=? where id=?
07:57:31,152 TRACE BasicBinder:83 - binding parameter [1] as [VARCHAR] - Ravi
07:57:31,153 TRACE BasicBinder:83 - binding parameter [2] as [DOUBLE] - 39344.44
07:57:31,154 TRACE BasicBinder:83 - binding parameter [3] as [INTEGER] - 1
07:57:31,158 DEBUG JdbcTransaction:113 - committed JDBC Connection
07:57:31,159 DEBUG JdbcTransaction:126 - re-enabling autocommit
07:57:31,160 DEBUG JpaTransactionManager:595 - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@1d9bec4d] after transaction
07:57:31,160 DEBUG EntityManagerFactoryUtils:338 - Closing JPA EntityManager
07:57:31,161 DEBUG JdbcCoordinatorImpl:173 - HHH000420: Closing un-released batch
07:57:31,161 DEBUG LogicalConnectionImpl:232 - Releasing JDBC connection
07:57:31,162 DEBUG LogicalConnectionImpl:250 - Released JDBC connection
07:57:31,164  INFO TestEmployee:77 - Employee [id=1, name=Ravi, salary=39344.44]
07:57:31,165 DEBUG DirtiesContextTestExecutionListener:107 - After test method: context [[TestContext@2ed94a8b testClass = TestEmployee, testInstance = test.java.TestEmployee@38082d64, testMethod = testSalaryIncrement@TestEmployee, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
07:57:31,166 DEBUG DirtiesContextTestExecutionListener:138 - After test class: context [[TestContext@2ed94a8b testClass = TestEmployee, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
07:57:31,172  INFO GenericApplicationContext:1048 - Closing org.springframework.context.support.GenericApplicationContext@13c78c0b: startup date [Wed May 31 07:57:28 IST 2017]; root of context hierarchy
07:57:31,173 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'lifecycleProcessor'
07:57:31,173  INFO DefaultListableBeanFactory:444 - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@de3a06f: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
07:57:31,174 DEBUG DefaultListableBeanFactory:500 - Retrieved dependent beans for bean 'employeeService': [test.java.TestEmployee]
07:57:31,174 DEBUG DisposableBeanAdapter:227 - Invoking destroy() on bean with name 'entityManagerFactory'
07:57:31,174  INFO LocalContainerEntityManagerFactoryBean:441 - Closing JPA EntityManagerFactory for persistence unit 'jpaData'
07:57:31,174 DEBUG SessionFactoryImpl:1359 - HHH000031: Closing
07:57:31,175 DEBUG EntityManagerFactoryRegistry:108 - Remove: name=jpaData
07:57:31,175 DEBUG DefaultListableBeanFactory:500 - Retrieved dependent beans for bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3': [entityManagerFactory]
07:58:27,965 DEBUG SpringJUnit4ClassRunner:106 - SpringJUnit4ClassRunner constructor called with [class test.java.TestEmployee].
07:58:28,039 DEBUG AbstractDelegatingSmartContextLoader:90 - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@6fffcba5 declaringClass = 'test.java.TestEmployee', classes = '{}', locations = '{classpath:beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
07:58:28,043 DEBUG ContextLoaderUtils:471 - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [test.java.TestEmployee]
07:58:28,047 DEBUG TestContextManager:186 - @TestExecutionListeners is not present for class [test.java.TestEmployee]: using defaults.
07:58:28,069 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:58:28,069 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:58:28,086 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:58:28,087 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:58:28,089 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:58:28,089 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:58:28,090 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:58:28,090 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:58:28,092 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:58:28,092 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:58:28,095 DEBUG DependencyInjectionTestExecutionListener:73 - Performing dependency injection for test context [[TestContext@2ed94a8b testClass = TestEmployee, testInstance = test.java.TestEmployee@38082d64, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
07:58:28,096 DEBUG AbstractDelegatingSmartContextLoader:100 - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
07:58:28,101 DEBUG AbstractGenericContextLoader:104 - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
07:58:28,200 DEBUG StandardEnvironment:108 - Adding [systemProperties] PropertySource with lowest search precedence
07:58:28,202 DEBUG StandardEnvironment:108 - Adding [systemEnvironment] PropertySource with lowest search precedence
07:58:28,203 DEBUG StandardEnvironment:127 - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
07:58:28,215  INFO XmlBeanDefinitionReader:316 - Loading XML bean definitions from class path resource [beans.xml]
07:58:28,241 DEBUG DefaultDocumentLoader:72 - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
07:58:28,280 DEBUG PluggableSchemaResolver:140 - Loading schema mappings from [META-INF/spring.schemas]
07:58:28,285 DEBUG PluggableSchemaResolver:146 - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
07:58:28,287 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
07:58:28,342 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.2.xsd
07:58:28,350 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
07:58:28,358 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.2.xsd
07:58:28,379 DEBUG DefaultBeanDefinitionDocumentReader:99 - Loading bean definitions
07:58:28,394 DEBUG DefaultNamespaceHandlerResolver:156 - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
07:58:28,470 DEBUG PathMatchingResourcePatternResolver:553 - Looking for matching resources in directory tree [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant]
07:58:28,470 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:28,474 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:28,475 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:28,478 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:28,480 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/entity] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:28,481 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/exception] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:28,485 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:28,487 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/vo] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:28,489 DEBUG PathMatchingResourcePatternResolver:354 - Resolved location pattern [classpath*:com/cognizant/*/**/*.class] to resources [file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo/EmployeeBO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/ApplicationController.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/EmployeeController.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/ApplicationDAO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/EmployeeDAO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/entity/Employee.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/exception/ApplicationException.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/ApplicationService.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/EmployeeService.class]]
07:58:28,527 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo/EmployeeBO.class]
07:58:28,541 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/EmployeeController.class]
07:58:28,546 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/EmployeeDAO.class]
07:58:28,550 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/EmployeeService.class]
07:58:28,579 DEBUG BeanDefinitionParserDelegate:494 - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3]
07:58:28,582 DEBUG XmlBeanDefinitionReader:216 - Loaded 17 bean definitions from location pattern [classpath:beans.xml]
07:58:28,586  INFO GenericApplicationContext:515 - Refreshing org.springframework.context.support.GenericApplicationContext@13c78c0b: startup date [Wed May 31 07:58:28 IST 2017]; root of context hierarchy
07:58:28,586 DEBUG GenericApplicationContext:545 - Bean factory for org.springframework.context.support.GenericApplicationContext@13c78c0b: org.springframework.beans.factory.support.DefaultListableBeanFactory@de3a06f: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager]; root of factory hierarchy
07:58:28,610 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
07:58:28,611 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
07:58:28,639 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
07:58:28,642 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
07:58:28,742 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
07:58:28,742 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
07:58:28,744 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
07:58:28,745 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
07:58:28,746 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
07:58:28,747 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
07:58:28,748 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
07:58:28,749 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
07:58:28,749 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
07:58:28,750 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
07:58:28,759 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
07:58:28,761 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
07:58:28,764 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
07:58:28,764 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
07:58:28,765 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
07:58:28,765 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
07:58:28,766 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
07:58:28,766 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
07:58:28,767 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
07:58:28,767 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
07:58:28,767 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
07:58:28,768 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
07:58:28,783 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
07:58:28,806 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
07:58:28,806 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'messageSource'
07:58:28,807 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'messageSource'
07:58:28,813 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'messageSource' to allow for resolving potential circular references
07:58:28,820 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:28,821 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:28,822 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
07:58:28,837 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:58:28,838 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:58:28,839 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
07:58:28,843 DEBUG BeanFactoryAdvisorRetrievalHelper:87 - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:28,846 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:58:28,847 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:28,850 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'messageSource'
07:58:28,851 DEBUG GenericApplicationContext:802 - Using MessageSource [org.springframework.context.support.ReloadableResourceBundleMessageSource: basenames=[]]
07:58:28,854 DEBUG GenericApplicationContext:836 - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1c93084c]
07:58:28,859 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'entityManagerFactory'
07:58:28,859 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'entityManagerFactory'
07:58:28,873 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
07:58:28,884 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'dataSource'
07:58:28,885 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'dataSource'
07:58:28,889 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
07:58:28,900  INFO DriverManagerDataSource:153 - Loaded JDBC driver: com.mysql.jdbc.Driver
07:58:28,901 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:28,902 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'dataSource'
07:58:28,902 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3'
07:58:28,912 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:28,913 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3'
07:58:28,920 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
07:58:28,931  INFO LocalContainerEntityManagerFactoryBean:287 - Building JPA container EntityManagerFactory for persistence unit 'jpaData'
07:58:28,987 DEBUG logging:143 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
07:58:29,031 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
07:58:29,032 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
07:58:29,033 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@33d512c1
07:58:29,035 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@765d7657
07:58:29,036 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@51399530
07:58:29,038 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b71e916
07:58:29,043 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
07:58:29,044 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
07:58:29,044 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@175c2241
07:58:29,046 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7c7a06ec
07:58:29,047 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7c7a06ec
07:58:29,047 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c7a06ec
07:58:29,051 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
07:58:29,052 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
07:58:29,052 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@206a70ef
07:58:29,054 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@34e9fd99
07:58:29,055 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@34e9fd99
07:58:29,056 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34e9fd99
07:58:29,060 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
07:58:29,064 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
07:58:29,065 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@40a4337a
07:58:29,068 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
07:58:29,069 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
07:58:29,069 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7586beff
07:58:29,072 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
07:58:29,073 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
07:58:29,074 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e6f74c
07:58:29,077 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@385c9627
07:58:29,078 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@385c9627
07:58:29,081 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@229f66ed
07:58:29,081 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@229f66ed
07:58:29,084 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@477b4cdf
07:58:29,084 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@477b4cdf
07:58:29,086 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5bda8e08
07:58:29,088 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@179ece50
07:58:29,090 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@4116aac9
07:58:29,091 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4116aac9
07:58:29,097 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7c6908d7
07:58:29,099 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c6908d7
07:58:29,101 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@bcec361
07:58:29,102 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bcec361
07:58:29,104 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@49438269
07:58:29,105 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@49438269
07:58:29,106 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@49438269
07:58:29,109 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55fe41ea
07:58:29,111 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@24269709
07:58:29,111 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24269709
07:58:29,111 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24269709
07:58:29,114 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a52dba3
07:58:29,117 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@45c7e403
07:58:29,118 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45c7e403
07:58:29,120 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@61322f9d
07:58:29,121 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61322f9d
07:58:29,123 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2362f559
07:58:29,123 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2362f559
07:58:29,127 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@544fa968
07:58:29,130 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@544fa968
07:58:29,135 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6c40365c
07:58:29,136 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6c40365c
07:58:29,138 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@55b0dcab
07:58:29,141 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37ceb1df
07:58:29,144 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@69453e37
07:58:29,145 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@69453e37
07:58:29,146 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@69453e37
07:58:29,147 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4009e306
07:58:29,148 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4009e306
07:58:29,148 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4009e306
07:58:29,149 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@63475ace
07:58:29,151 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@66d18979
07:58:29,152 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@66d18979
07:58:29,152 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@66d18979
07:58:29,154 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13b6aecc
07:58:29,155 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13b6aecc
07:58:29,155 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13b6aecc
07:58:29,157 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1e66f1f5
07:58:29,158 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@394df057
07:58:29,165 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@49e5f737
07:58:29,166 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49e5f737
07:58:29,167 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@687e99d8
07:58:29,171 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@424e1977
07:58:29,172 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@424e1977
07:58:29,174 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@623a8092
07:58:29,175 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@623a8092
07:58:29,176 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3098cf3b
07:58:29,178 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21b2e768
07:58:29,179 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@68567e20
07:58:29,184 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3e96bacf
07:58:29,186 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e96bacf
07:58:29,187 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c83dc97
07:58:29,187 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7748410a
07:58:29,188 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@740773a3
07:58:29,188 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@37f1104d
07:58:29,188 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55740540
07:58:29,189 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60015ef5
07:58:29,189 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f54a33d
07:58:29,190 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1018bde2
07:58:29,215  INFO Version:37 - HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
07:58:29,222  INFO Version:41 - HHH000412: Hibernate Core {4.2.0.Final}
07:58:29,227  INFO Environment:239 - HHH000206: hibernate.properties not found
07:58:29,231  INFO Environment:342 - HHH000021: Bytecode provider name : javassist
07:58:29,245 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
07:58:29,246 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
07:58:29,247 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
07:58:29,247 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
07:58:29,249 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
07:58:29,249 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
07:58:29,251 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
07:58:29,251 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
07:58:29,252 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
07:58:29,253 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
07:58:29,254 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
07:58:29,254 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
07:58:29,255 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
07:58:29,256 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
07:58:29,257 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
07:58:29,260 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
07:58:29,261 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
07:58:29,261 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@33d512c1
07:58:29,261 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@765d7657
07:58:29,262 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@51399530
07:58:29,262 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b71e916
07:58:29,262 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
07:58:29,263 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
07:58:29,263 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@175c2241
07:58:29,263 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7c7a06ec
07:58:29,263 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7c7a06ec
07:58:29,263 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c7a06ec
07:58:29,264 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
07:58:29,264 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
07:58:29,265 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@206a70ef
07:58:29,265 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@34e9fd99
07:58:29,265 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@34e9fd99
07:58:29,266 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34e9fd99
07:58:29,266 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
07:58:29,267 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
07:58:29,267 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@40a4337a
07:58:29,267 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
07:58:29,268 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
07:58:29,268 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7586beff
07:58:29,268 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
07:58:29,269 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
07:58:29,269 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e6f74c
07:58:29,270 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@385c9627
07:58:29,270 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@385c9627
07:58:29,270 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@229f66ed
07:58:29,271 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@229f66ed
07:58:29,271 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@477b4cdf
07:58:29,272 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@477b4cdf
07:58:29,272 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5bda8e08
07:58:29,273 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@179ece50
07:58:29,275 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@4116aac9
07:58:29,275 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4116aac9
07:58:29,277 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7c6908d7
07:58:29,277 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c6908d7
07:58:29,278 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@bcec361
07:58:29,279 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bcec361
07:58:29,279 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@49438269
07:58:29,280 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@49438269
07:58:29,280 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@49438269
07:58:29,281 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55fe41ea
07:58:29,281 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@24269709
07:58:29,282 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24269709
07:58:29,282 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24269709
07:58:29,282 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a52dba3
07:58:29,283 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@45c7e403
07:58:29,283 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45c7e403
07:58:29,283 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@61322f9d
07:58:29,284 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61322f9d
07:58:29,284 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2362f559
07:58:29,284 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2362f559
07:58:29,285 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@544fa968
07:58:29,285 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@544fa968
07:58:29,285 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6c40365c
07:58:29,286 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6c40365c
07:58:29,286 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@55b0dcab
07:58:29,286 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37ceb1df
07:58:29,286 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@69453e37
07:58:29,286 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@69453e37
07:58:29,287 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@69453e37
07:58:29,287 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4009e306
07:58:29,287 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4009e306
07:58:29,287 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4009e306
07:58:29,287 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@63475ace
07:58:29,288 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@66d18979
07:58:29,288 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@66d18979
07:58:29,288 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@66d18979
07:58:29,288 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13b6aecc
07:58:29,289 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13b6aecc
07:58:29,289 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13b6aecc
07:58:29,290 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1e66f1f5
07:58:29,290 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@394df057
07:58:29,290 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@49e5f737
07:58:29,291 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49e5f737
07:58:29,291 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@687e99d8
07:58:29,292 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@424e1977
07:58:29,292 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@424e1977
07:58:29,292 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@623a8092
07:58:29,292 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@623a8092
07:58:29,293 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3098cf3b
07:58:29,293 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21b2e768
07:58:29,293 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@68567e20
07:58:29,293 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3e96bacf
07:58:29,294 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e96bacf
07:58:29,294 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6babf3bf
07:58:29,294 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3059cbc
07:58:29,295 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7ea9e1e2
07:58:29,295 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@24fcf36f
07:58:29,295 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10feca44
07:58:29,295 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fb1549b
07:58:29,296 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ea6147e
07:58:29,296 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d02f94e
07:58:29,296 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
07:58:29,296 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
07:58:29,297 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
07:58:29,297 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
07:58:29,297 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
07:58:29,298 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
07:58:29,298 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
07:58:29,298 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
07:58:29,299 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
07:58:29,299 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
07:58:29,299 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
07:58:29,300 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
07:58:29,300 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
07:58:29,300 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
07:58:29,301 DEBUG DefaultIdentifierGeneratorFactory:93 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
07:58:29,302 DEBUG Ejb3Configuration:527 - Processing PersistenceUnitInfo [
	name: jpaData
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@3cd1a2f1
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7a419da4
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@14555e0a
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties []
07:58:29,306 DEBUG Ejb3Configuration:850 - Detect class: true; detect hbm: true
07:58:29,306 DEBUG Ejb3Configuration:850 - Detect class: true; detect hbm: true
07:58:29,312 DEBUG AbstractJarVisitor:126 - Searching mapped entities in jar/par: file:/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes
07:58:29,313 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.bo.EmployeeBO
07:58:29,352 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.controller.ApplicationController
07:58:29,353 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.controller.EmployeeController
07:58:29,354 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.dao.ApplicationDAO
07:58:29,355 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.dao.EmployeeDAO
07:58:29,356 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.entity.Employee
07:58:29,357 DEBUG AbstractJarVisitor:223 - Java element filter matched for com.cognizant.entity.Employee
07:58:29,358 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.exception.ApplicationException
07:58:29,359 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.service.ApplicationService
07:58:29,360 DEBUG AbstractJarVisitor:172 - Filtering: com.cognizant.service.EmployeeService
07:58:29,361 DEBUG AbstractJarVisitor:172 - Filtering: test.java.TestEmployee
07:58:29,378 DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
07:58:29,379 DEBUG IntegratorServiceImpl:59 - Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
07:58:29,392 DEBUG NamingHelper:50 - No JNDI name configured for binding Ejb3Configuration
07:58:29,399 DEBUG Configuration:1735 - Preparing to build session factory with filters : {}
07:58:29,419 DEBUG Configuration:3416 - Processing hbm.xml files
07:58:29,419 DEBUG Configuration:3446 - Process annotated classes
07:58:29,424 DEBUG AnnotationBinder:531 - Binding entity from annotated class: com.cognizant.entity.Employee
07:58:29,446 DEBUG Ejb3Column:196 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
07:58:29,452 DEBUG EntityBinder:394 - Import with entity name Employee
07:58:29,457 DEBUG EntityBinder:564 - Bind entity com.cognizant.entity.Employee on table Employee
07:58:29,485 DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=id, insertable=true, updatable=true, unique=false}
07:58:29,490 DEBUG PropertyBinder:179 - MetadataSourceProcessor property id with lazy=false
07:58:29,493 DEBUG SimpleValueBinder:331 - building SimpleValue for id
07:58:29,496 DEBUG PropertyBinder:260 - Building property id
07:58:29,499 DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=name, insertable=true, updatable=true, unique=false}
07:58:29,500 DEBUG PropertyBinder:179 - MetadataSourceProcessor property name with lazy=false
07:58:29,500 DEBUG SimpleValueBinder:331 - building SimpleValue for name
07:58:29,502 DEBUG PropertyBinder:260 - Building property name
07:58:29,503 DEBUG Ejb3Column:196 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Employee), mappingColumn=salary, insertable=true, updatable=true, unique=false}
07:58:29,503 DEBUG PropertyBinder:179 - MetadataSourceProcessor property salary with lazy=false
07:58:29,504 DEBUG SimpleValueBinder:331 - building SimpleValue for salary
07:58:29,504 DEBUG PropertyBinder:260 - Building property salary
07:58:29,506 DEBUG SimpleValueBinder:369 - Setting SimpleValue typeName for id
07:58:29,506 DEBUG SimpleValueBinder:369 - Setting SimpleValue typeName for name
07:58:29,506 DEBUG SimpleValueBinder:369 - Setting SimpleValue typeName for salary
07:58:29,507 DEBUG Configuration:1406 - Processing fk mappings (*ToOne and JoinedSubclass)
07:58:29,508 DEBUG Configuration:1585 - Processing extends queue
07:58:29,508 DEBUG Configuration:1643 - Processing extends queue
07:58:29,508 DEBUG Configuration:1588 - Processing collection mappings
07:58:29,509 DEBUG Configuration:1598 - Processing native query and ResultSetMapping mappings
07:58:29,509 DEBUG Configuration:1606 - Processing association property references
07:58:29,509 DEBUG Configuration:1628 - Creating tables' unique integer identifiers
07:58:29,509 DEBUG Configuration:1629 - Processing foreign key constraints
07:58:29,527  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
07:58:29,552 DEBUG DriverManagerDataSource:162 - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/cogdb]
07:58:29,830 DEBUG JdbcServicesImpl:121 - Database ->
       name : MySQL
    version : 5.7.14
      major : 5
      minor : 7
07:58:29,831 DEBUG JdbcServicesImpl:127 - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
07:58:29,831 DEBUG JdbcServicesImpl:133 - JDBC version : 3.0
07:58:29,849  INFO Dialect:128 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
07:58:29,862  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
07:58:29,874 DEBUG SettingsFactory:114 - Automatic flush during beforeCompletion(): disabled
07:58:29,875 DEBUG SettingsFactory:120 - Automatic session close at end of transaction: disabled
07:58:29,875 DEBUG SettingsFactory:131 - JDBC batch size: 15
07:58:29,875 DEBUG SettingsFactory:137 - JDBC batch updates for versioned data: disabled
07:58:29,876 DEBUG SettingsFactory:147 - Scrollable result sets: enabled
07:58:29,876 DEBUG SettingsFactory:153 - Wrap result sets: disabled
07:58:29,876 DEBUG SettingsFactory:159 - JDBC3 getGeneratedKeys(): enabled
07:58:29,877 DEBUG SettingsFactory:171 - multi-tenancy strategy : NONE
07:58:29,877 DEBUG SettingsFactory:177 - Connection release mode: auto
07:58:29,877  INFO TransactionFactoryInitiator:73 - HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
07:58:29,881 DEBUG SettingsFactory:199 - Using BatchFetchStyle : LEGACY
07:58:29,881 DEBUG SettingsFactory:218 - Maximum outer join fetch depth: 2
07:58:29,882 DEBUG SettingsFactory:224 - Default batch fetch size: 1
07:58:29,882 DEBUG SettingsFactory:230 - Generate SQL with comments: disabled
07:58:29,882 DEBUG SettingsFactory:236 - Order SQL updates by primary key: disabled
07:58:29,883 DEBUG SettingsFactory:242 - Order SQL inserts for batching: disabled
07:58:29,883 DEBUG SettingsFactory:250 - Default null ordering: none
07:58:29,884 DEBUG SettingsFactory:541 - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
07:58:29,885  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
07:58:29,886 DEBUG SettingsFactory:260 - Query language substitutions: {}
07:58:29,886 DEBUG SettingsFactory:266 - JPA-QL strict compliance: enabled
07:58:29,886 DEBUG SettingsFactory:274 - Second-level cache: enabled
07:58:29,886 DEBUG SettingsFactory:280 - Query cache: disabled
07:58:29,887 DEBUG SettingsFactory:481 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
07:58:29,887 DEBUG SettingsFactory:491 - org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
07:58:29,888 DEBUG SettingsFactory:295 - Optimize cache for minimal puts: disabled
07:58:29,888 DEBUG SettingsFactory:310 - Structured second-level cache entries: disabled
07:58:29,888 DEBUG SettingsFactory:320 - Second-level cache direct-reference entries: disabled
07:58:29,889 DEBUG SettingsFactory:328 - Statistics: disabled
07:58:29,889 DEBUG SettingsFactory:334 - Deleted entity synthetic identifier rollback: disabled
07:58:29,889 DEBUG SettingsFactory:358 - Default entity-mode: pojo
07:58:29,889 DEBUG SettingsFactory:364 - Named query checking : enabled
07:58:29,890 DEBUG SettingsFactory:370 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
07:58:29,890 DEBUG SettingsFactory:388 - Allow initialization of lazy state outside session : : disabled
07:58:29,890 DEBUG SettingsFactory:398 - JTA Track by Thread: enabled
07:58:29,898 DEBUG SessionFactoryImpl:225 - Building session factory
07:58:29,907 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@6bffbc6d
07:58:29,908 DEBUG SessionFactoryImpl:277 - Session factory constructed with filter configurations : {}
07:58:29,909 DEBUG SessionFactoryImpl:278 - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.ejb.discard_pc_on_close=false, hibernate.transaction.flush_before_completion=false, os.name=Mac OS X, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/classes, user.country.format=IN, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_101-b13, hibernate.connection.autocommit=true, user.name=puneetvashisht, javax.persistence.validation.mode=AUTO, hibernate.connection.release_mode=auto, user.language=en, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib, java.version=1.8.0_101, user.timezone=Asia/Kolkata, sun.arch.data.model=64, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, file.separator=/, java.specification.name=Java Platform API Specification, hibernate.format_sql=false, java.class.version=52.0, user.country=US, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre, java.vm.info=mixed mode, os.version=10.12.4, hibernate.transaction.factory_class=org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@14555e0a, hibernate.query.jpaql_strict_compliance=true, path.separator=:, java.vm.version=25.101-b13, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.io.unicode.encoding=UnicodeBig, awt.toolkit=sun.lwawt.macosx.LWCToolkit, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, user.home=/Users/puneetvashisht, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=select, java.library.path=/Users/puneetvashisht/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor.url=http://java.oracle.com/, java.vm.vendor=Oracle Corporation, gopherProxySet=false, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 53856 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames test.java.TestEmployee, java.class.path=/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/test-classes:/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes:/Users/puneetvashisht/.p2/pool/plugins/org.junit_4.12.0.v201504281640/junit.jar:/Users/puneetvashisht/.p2/pool/plugins/org.hamcrest.core_1.3.0.v201303031735.jar:/Users/puneetvashisht/.m2/repository/org/hibernate/hibernate-entitymanager/4.2.0.Final/hibernate-entitymanager-4.2.0.Final.jar:/Users/puneetvashisht/.m2/repository/org/jboss/logging/jboss-logging/3.1.0.GA/jboss-logging-3.1.0.GA.jar:/Users/puneetvashisht/.m2/repository/org/hibernate/hibernate-core/4.2.0.Final/hibernate-core-4.2.0.Final.jar:/Users/puneetvashisht/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/puneetvashisht/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.1_spec/1.0.0.Final/jboss-transaction-api_1.1_spec-1.0.0.Final.jar:/Users/puneetvashisht/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/puneetvashisht/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.1.Final/hibernate-jpa-2.0-api-1.0.1.Final.jar:/Users/puneetvashisht/.m2/repository/org/javassist/javassist/3.15.0-GA/javassist-3.15.0-GA.jar:/Users/puneetvashisht/.m2/repository/org/hibernate/common/hibernate-commons-annotations/4.0.1.Final/hibernate-commons-annotations-4.0.1.Final.jar:/Users/puneetvashisht/.m2/repository/log4j/log4j/1.2.16/log4j-1.2.16.jar:/Users/puneetvashisht/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-test/3.2.16.RELEASE/spring-test-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-core/3.2.16.RELEASE/spring-core-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-orm/3.2.16.RELEASE/spring-orm-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-beans/3.2.16.RELEASE/spring-beans-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-jdbc/3.2.16.RELEASE/spring-jdbc-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-tx/3.2.16.RELEASE/spring-tx-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-web/3.2.16.RELEASE/spring-web-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-aop/3.2.16.RELEASE/spring-aop-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-context/3.2.16.RELEASE/spring-context-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-webmvc/3.2.16.RELEASE/spring-webmvc-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/org/springframework/spring-expression/3.2.16.RELEASE/spring-expression-3.2.16.RELEASE.jar:/Users/puneetvashisht/.m2/repository/mysql/mysql-connector-java/5.1.6/mysql-connector-java-5.1.6.jar:/Users/puneetvashisht/eclipse/jee-neon/Eclipse.app/Contents/Eclipse/configuration/org.eclipse.osgi/387/0/.cp/:/Users/puneetvashisht/eclipse/jee-neon/Eclipse.app/Contents/Eclipse/configuration/org.eclipse.osgi/386/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, sun.os.patch.level=unknown, hibernate.connection.provider_class=org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider, java.io.tmpdir=/var/folders/pp/0stdpsvj1n16sc84yhk4v4l40000gn/T/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, javax.persistence.sharedCache.mode=UNSPECIFIED, os.arch=x86_64, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.ext.dirs=/Users/puneetvashisht/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, user.dir=/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, hibernate.use_identifier_rollback=false, java.specification.version=1.8, hibernate.show_sql=true}
07:58:29,959 DEBUG DefaultIdentifierGeneratorFactory:107 - Setting dialect [org.hibernate.dialect.MySQLDialect]
07:58:30,093 DEBUG AbstractEntityPersister:3582 - Static SQL for entity: com.cognizant.entity.Employee
07:58:30,094 DEBUG AbstractEntityPersister:3587 -  Version select: select id from Employee where id =?
07:58:30,095 DEBUG AbstractEntityPersister:3590 -  Snapshot select: select employee_.id, employee_.name as name2_0_, employee_.salary as salary3_0_ from Employee employee_ where employee_.id=?
07:58:30,095 DEBUG AbstractEntityPersister:3593 -  Insert 0: insert into Employee (name, salary, id) values (?, ?, ?)
07:58:30,096 DEBUG AbstractEntityPersister:3594 -  Update 0: update Employee set name=?, salary=? where id=?
07:58:30,096 DEBUG AbstractEntityPersister:3595 -  Delete 0: delete from Employee where id=?
07:58:30,096 DEBUG AbstractEntityPersister:3598 -  Identity insert: insert into Employee (name, salary) values (?, ?)
07:58:30,123 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [NONE]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:58:30,124 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [READ]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:58:30,125 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [UPGRADE]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=? for update
07:58:30,125 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [UPGRADE_NOWAIT]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=? for update
07:58:30,126 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [FORCE]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=? for update
07:58:30,127 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [PESSIMISTIC_READ]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=? lock in share mode
07:58:30,128 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [PESSIMISTIC_WRITE]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=? for update
07:58:30,129 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [PESSIMISTIC_FORCE_INCREMENT]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=? for update
07:58:30,130 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [OPTIMISTIC]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:58:30,131 DEBUG Loader:123 - Static select for entity com.cognizant.entity.Employee [OPTIMISTIC_FORCE_INCREMENT]: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:58:30,141 DEBUG Loader:56 - Static select for action ACTION_MERGE on entity com.cognizant.entity.Employee: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:58:30,142 DEBUG Loader:56 - Static select for action ACTION_REFRESH on entity com.cognizant.entity.Employee: select employee0_.id as id1_0_0_, employee0_.name as name2_0_0_, employee0_.salary as salary3_0_0_ from Employee employee0_ where employee0_.id=?
07:58:30,150 DEBUG SessionFactoryRegistry:62 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1ae67cad
07:58:30,150 DEBUG SessionFactoryRegistry:75 - Registering SessionFactory: a28693d4-4e46-4703-82b9-ca5201da923f (<unnamed>)
07:58:30,151 DEBUG SessionFactoryRegistry:82 - Not binding SessionFactory to JNDI, no JNDI name configured
07:58:30,151 DEBUG SessionFactoryImpl:488 - Instantiated session factory
07:58:30,152 DEBUG SessionFactoryImpl:1060 - Checking 0 named HQL queries
07:58:30,153 DEBUG SessionFactoryImpl:1083 - Checking 0 named SQL queries
07:58:30,168 DEBUG StatisticsInitiator:110 - Statistics initialized [enabled=false]
07:58:30,218 DEBUG EntityManagerFactoryRegistry:56 - Initializing EntityManagerFactoryRegistry : org.hibernate.ejb.internal.EntityManagerFactoryRegistry@4febb875
07:58:30,218 DEBUG EntityManagerFactoryRegistry:66 - Registering EntityManagerFactory: jpaData 
07:58:30,221 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:30,223 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'entityManagerFactory'
07:58:30,225  INFO DefaultListableBeanFactory:603 - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@de3a06f: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
07:58:30,226 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
07:58:30,226 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:58:30,227 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:58:30,227 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:58:30,233 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
07:58:30,238 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:58:30,238 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:58:30,239 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:58:30,239 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:30,239 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
07:58:30,240 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
07:58:30,240 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
07:58:30,240 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
07:58:30,240 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
07:58:30,241 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeBO'
07:58:30,241 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeBO'
07:58:30,250 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.bo.EmployeeBO]: AutowiredFieldElement for private com.cognizant.dao.EmployeeDAO com.cognizant.bo.EmployeeBO.employeeDAO
07:58:30,250 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeBO' to allow for resolving potential circular references
07:58:30,252 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeBO': AutowiredFieldElement for private com.cognizant.dao.EmployeeDAO com.cognizant.bo.EmployeeBO.employeeDAO
07:58:30,256 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeDAO'
07:58:30,257 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeDAO'
07:58:30,268 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.dao.EmployeeDAO]: PersistenceElement for private javax.persistence.EntityManager com.cognizant.dao.EmployeeDAO.em
07:58:30,269 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeDAO' to allow for resolving potential circular references
07:58:30,271 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeDAO': PersistenceElement for private javax.persistence.EntityManager com.cognizant.dao.EmployeeDAO.em
07:58:30,274 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
07:58:30,275 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:30,293 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:30,296 DEBUG AnnotationTransactionAttributeSource:107 - Adding transactional method 'EmployeeDAO.addEmployee' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
07:58:30,304 DEBUG InfrastructureAdvisorAutoProxyCreator:540 - Creating implicit proxy for bean 'employeeDAO' with 0 common interceptors and 1 specific interceptors
07:58:30,310 DEBUG CglibAopProxy:156 - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.cognizant.dao.EmployeeDAO@556d0826]
07:58:30,393 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:58:30,398 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public com.cognizant.entity.Employee com.cognizant.dao.EmployeeDAO.incrementSalary(int,double)
07:58:30,398 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.util.List com.cognizant.dao.EmployeeDAO.findEmployeesBySalary(double)
07:58:30,398 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public void com.cognizant.dao.EmployeeDAO.addEmployee(com.cognizant.entity.Employee)
07:58:30,399 DEBUG CglibAopProxy:761 - Found finalize() method - using NO_OVERRIDE
07:58:30,399 DEBUG CglibAopProxy:773 - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
07:58:30,399 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
07:58:30,399 DEBUG CglibAopProxy:778 - Found 'hashCode' method: public native int java.lang.Object.hashCode()
07:58:30,400 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
07:58:30,400 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
07:58:30,400 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
07:58:30,401 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
07:58:30,401 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
07:58:30,401 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
07:58:30,401 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
07:58:30,402 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:58:30,402 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:58:30,402 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
07:58:30,402 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
07:58:30,403 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
07:58:30,403 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
07:58:30,403 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
07:58:30,403 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
07:58:30,403 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
07:58:30,404 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:58:30,404 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
07:58:30,404 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
07:58:30,405 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
07:58:30,405 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
07:58:30,405 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
07:58:30,405 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
07:58:30,405 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
07:58:30,435 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeDAO'
07:58:30,435 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeBO' to bean named 'employeeDAO'
07:58:30,436 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:30,436 DEBUG AnnotationTransactionAttributeSource:107 - Adding transactional method 'EmployeeBO.incrementSalary' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
07:58:30,436 DEBUG InfrastructureAdvisorAutoProxyCreator:540 - Creating implicit proxy for bean 'employeeBO' with 0 common interceptors and 1 specific interceptors
07:58:30,437 DEBUG CglibAopProxy:156 - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.cognizant.bo.EmployeeBO@42f3156d]
07:58:30,438 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public com.cognizant.entity.Employee com.cognizant.bo.EmployeeBO.incrementSalary(int,double) throws java.lang.Exception
07:58:30,439 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public void com.cognizant.bo.EmployeeBO.addEmployees(java.util.List) throws java.lang.Exception
07:58:30,439 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.util.List com.cognizant.bo.EmployeeBO.findEmployeesBySalary(double)
07:58:30,439 DEBUG CglibAopProxy:761 - Found finalize() method - using NO_OVERRIDE
07:58:30,439 DEBUG CglibAopProxy:773 - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
07:58:30,440 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
07:58:30,440 DEBUG CglibAopProxy:778 - Found 'hashCode' method: public native int java.lang.Object.hashCode()
07:58:30,440 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
07:58:30,441 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
07:58:30,441 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
07:58:30,441 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
07:58:30,441 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
07:58:30,441 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
07:58:30,442 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
07:58:30,442 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:58:30,444 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:58:30,444 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
07:58:30,444 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
07:58:30,445 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
07:58:30,445 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
07:58:30,445 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
07:58:30,445 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
07:58:30,445 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
07:58:30,446 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:58:30,446 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
07:58:30,446 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
07:58:30,446 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
07:58:30,447 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
07:58:30,447 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
07:58:30,447 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
07:58:30,447 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
07:58:30,481 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeBO'
07:58:30,482 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeController'
07:58:30,482 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeController'
07:58:30,486 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.controller.EmployeeController]: AutowiredFieldElement for com.cognizant.service.EmployeeService com.cognizant.controller.EmployeeController.service
07:58:30,487 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeController' to allow for resolving potential circular references
07:58:30,488 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeController': AutowiredFieldElement for com.cognizant.service.EmployeeService com.cognizant.controller.EmployeeController.service
07:58:30,488 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeService'
07:58:30,489 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeService'
07:58:30,489 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.service.EmployeeService]: AutowiredFieldElement for com.cognizant.bo.EmployeeBO com.cognizant.service.EmployeeService.bo
07:58:30,490 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeService' to allow for resolving potential circular references
07:58:30,491 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeService': AutowiredFieldElement for com.cognizant.bo.EmployeeBO com.cognizant.service.EmployeeService.bo
07:58:30,492 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeBO'
07:58:30,492 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeService' to bean named 'employeeBO'
07:58:30,492 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:30,493 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeService'
07:58:30,493 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeController' to bean named 'employeeService'
07:58:30,494 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:30,496 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeController'
07:58:30,496 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeDAO'
07:58:30,496 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeService'
07:58:30,496 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'messageSource'
07:58:30,496 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'dataSource'
07:58:30,496 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
07:58:30,497 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'transactionManager'
07:58:30,497 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'transactionManager'
07:58:30,504 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
07:58:30,510 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
07:58:30,511 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'transactionManager'
07:58:30,513 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:30,514 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'transactionManager'
07:58:30,515 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
07:58:30,517 DEBUG GenericApplicationContext:863 - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7c7d3c46]
07:58:30,517 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'lifecycleProcessor'
07:58:30,525 DEBUG PropertySourcesPropertyResolver:81 - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
07:58:30,525 DEBUG PropertySourcesPropertyResolver:81 - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
07:58:30,526 DEBUG PropertySourcesPropertyResolver:103 - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
07:58:30,527 DEBUG CacheAwareContextLoaderDelegate:97 - Storing ApplicationContext in cache under key [[MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
07:58:30,527 DEBUG cache:114 - Spring test ApplicationContext cache statistics: [ContextCache@5049d8b2 size = 1, hitCount = 0, missCount = 1, parentContextCount = 0]
07:58:30,531 DEBUG InjectionMetadata:86 - Processing injected element of bean 'test.java.TestEmployee': AutowiredFieldElement for com.cognizant.service.EmployeeService test.java.TestEmployee.service
07:58:30,532 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeService'
07:58:30,533 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'test.java.TestEmployee' to bean named 'employeeService'
07:58:30,533 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:30,538  WARN TestEmployee:73 - Test *******
07:58:30,539 DEBUG DirtiesContextTestExecutionListener:107 - After test method: context [[TestContext@2ed94a8b testClass = TestEmployee, testInstance = test.java.TestEmployee@38082d64, testMethod = testSalaryIncrement@TestEmployee, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
07:58:30,540 DEBUG DirtiesContextTestExecutionListener:138 - After test class: context [[TestContext@2ed94a8b testClass = TestEmployee, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
07:58:30,542  INFO GenericApplicationContext:1048 - Closing org.springframework.context.support.GenericApplicationContext@13c78c0b: startup date [Wed May 31 07:58:28 IST 2017]; root of context hierarchy
07:58:30,543 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'lifecycleProcessor'
07:58:30,543  INFO DefaultListableBeanFactory:444 - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@de3a06f: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
07:58:30,549 DEBUG DefaultListableBeanFactory:500 - Retrieved dependent beans for bean 'employeeService': [test.java.TestEmployee]
07:58:30,550 DEBUG DisposableBeanAdapter:227 - Invoking destroy() on bean with name 'entityManagerFactory'
07:58:30,550  INFO LocalContainerEntityManagerFactoryBean:441 - Closing JPA EntityManagerFactory for persistence unit 'jpaData'
07:58:30,551 DEBUG SessionFactoryImpl:1359 - HHH000031: Closing
07:58:30,551 DEBUG EntityManagerFactoryRegistry:108 - Remove: name=jpaData
07:58:30,552 DEBUG DefaultListableBeanFactory:500 - Retrieved dependent beans for bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3': [entityManagerFactory]
07:58:56,673 DEBUG SpringJUnit4ClassRunner:106 - SpringJUnit4ClassRunner constructor called with [class test.java.TestEmployee].
07:58:56,744 DEBUG AbstractDelegatingSmartContextLoader:90 - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@6fffcba5 declaringClass = 'test.java.TestEmployee', classes = '{}', locations = '{classpath:beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
07:58:56,747 DEBUG ContextLoaderUtils:471 - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [test.java.TestEmployee]
07:58:56,750 DEBUG TestContextManager:186 - @TestExecutionListeners is not present for class [test.java.TestEmployee]: using defaults.
07:58:56,773 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:58:56,773 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:58:56,786 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:58:56,787 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:58:56,788 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:58:56,788 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:58:56,789 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:58:56,789 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:58:56,791 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
07:58:56,791 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
07:58:56,793 DEBUG DependencyInjectionTestExecutionListener:73 - Performing dependency injection for test context [[TestContext@2ed94a8b testClass = TestEmployee, testInstance = test.java.TestEmployee@38082d64, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
07:58:56,794 DEBUG AbstractDelegatingSmartContextLoader:100 - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
07:58:56,797 DEBUG AbstractGenericContextLoader:104 - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
07:58:56,894 DEBUG StandardEnvironment:108 - Adding [systemProperties] PropertySource with lowest search precedence
07:58:56,896 DEBUG StandardEnvironment:108 - Adding [systemEnvironment] PropertySource with lowest search precedence
07:58:56,897 DEBUG StandardEnvironment:127 - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
07:58:56,909  INFO XmlBeanDefinitionReader:316 - Loading XML bean definitions from class path resource [beans.xml]
07:58:56,936 DEBUG DefaultDocumentLoader:72 - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
07:58:56,973 DEBUG PluggableSchemaResolver:140 - Loading schema mappings from [META-INF/spring.schemas]
07:58:56,979 DEBUG PluggableSchemaResolver:146 - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
07:58:56,981 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
07:58:57,048 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.2.xsd
07:58:57,055 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
07:58:57,062 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.2.xsd
07:58:57,089 DEBUG DefaultBeanDefinitionDocumentReader:99 - Loading bean definitions
07:58:57,107 DEBUG DefaultNamespaceHandlerResolver:156 - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
07:58:57,180 DEBUG PathMatchingResourcePatternResolver:553 - Looking for matching resources in directory tree [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant]
07:58:57,181 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:57,184 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:57,185 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:57,188 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:57,190 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/entity] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:57,192 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/exception] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:57,195 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:57,196 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/vo] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
07:58:57,199 DEBUG PathMatchingResourcePatternResolver:354 - Resolved location pattern [classpath*:com/cognizant/*/**/*.class] to resources [file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo/EmployeeBO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/ApplicationController.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/EmployeeController.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/ApplicationDAO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/EmployeeDAO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/entity/Employee.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/exception/ApplicationException.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/ApplicationService.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/EmployeeService.class]]
07:58:57,241 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo/EmployeeBO.class]
07:58:57,251 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/EmployeeController.class]
07:58:57,256 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/EmployeeDAO.class]
07:58:57,261 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/EmployeeService.class]
07:58:57,303 DEBUG BeanDefinitionParserDelegate:494 - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3]
07:58:57,305 DEBUG XmlBeanDefinitionReader:216 - Loaded 17 bean definitions from location pattern [classpath:beans.xml]
07:58:57,310  INFO GenericApplicationContext:515 - Refreshing org.springframework.context.support.GenericApplicationContext@13c78c0b: startup date [Wed May 31 07:58:57 IST 2017]; root of context hierarchy
07:58:57,311 DEBUG GenericApplicationContext:545 - Bean factory for org.springframework.context.support.GenericApplicationContext@13c78c0b: org.springframework.beans.factory.support.DefaultListableBeanFactory@de3a06f: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager]; root of factory hierarchy
07:58:57,342 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
07:58:57,343 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
07:58:57,364 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
07:58:57,370 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
07:58:57,464 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
07:58:57,464 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
07:58:57,466 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
07:58:57,466 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
07:58:57,467 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
07:58:57,467 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
07:58:57,469 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
07:58:57,469 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
07:58:57,470 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
07:58:57,470 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
07:58:57,475 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
07:58:57,476 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
07:58:57,477 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
07:58:57,477 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
07:58:57,477 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
07:58:57,478 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
07:58:57,478 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
07:58:57,478 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
07:58:57,478 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
07:58:57,479 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
07:58:57,479 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
07:58:57,480 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
07:58:57,493 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
07:58:57,525 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
07:58:57,526 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'messageSource'
07:58:57,526 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'messageSource'
07:58:57,532 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'messageSource' to allow for resolving potential circular references
07:58:57,540 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:57,540 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:57,543 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
07:58:57,559 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:58:57,559 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:58:57,561 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
07:58:57,564 DEBUG BeanFactoryAdvisorRetrievalHelper:87 - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:57,568 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:58:57,570 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:57,574 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'messageSource'
07:58:57,575 DEBUG GenericApplicationContext:802 - Using MessageSource [org.springframework.context.support.ReloadableResourceBundleMessageSource: basenames=[]]
07:58:57,578 DEBUG GenericApplicationContext:836 - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1c93084c]
07:58:57,582 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'entityManagerFactory'
07:58:57,583 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'entityManagerFactory'
07:58:57,598 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
07:58:57,608 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'dataSource'
07:58:57,609 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'dataSource'
07:58:57,612 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
07:58:57,624  INFO DriverManagerDataSource:153 - Loaded JDBC driver: com.mysql.jdbc.Driver
07:58:57,624 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:57,626 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'dataSource'
07:58:57,627 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3'
07:58:57,639 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:57,641 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3'
07:58:57,645 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
07:58:57,658  INFO LocalContainerEntityManagerFactoryBean:287 - Building JPA container EntityManagerFactory for persistence unit 'jpaData'
07:58:57,729 DEBUG logging:143 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
07:58:57,762 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
07:58:57,763 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
07:58:57,763 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@33d512c1
07:58:57,765 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@765d7657
07:58:57,767 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@51399530
07:58:57,768 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b71e916
07:58:57,772 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
07:58:57,773 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
07:58:57,774 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@175c2241
07:58:57,775 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7c7a06ec
07:58:57,776 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7c7a06ec
07:58:57,776 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c7a06ec
07:58:57,781 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
07:58:57,782 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
07:58:57,783 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@206a70ef
07:58:57,785 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@34e9fd99
07:58:57,785 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@34e9fd99
07:58:57,786 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34e9fd99
07:58:57,789 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
07:58:57,792 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
07:58:57,793 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@40a4337a
07:58:57,795 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
07:58:57,795 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
07:58:57,796 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7586beff
07:58:57,798 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
07:58:57,799 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
07:58:57,799 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e6f74c
07:58:57,803 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@385c9627
07:58:57,803 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@385c9627
07:58:57,805 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@229f66ed
07:58:57,806 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@229f66ed
07:58:57,808 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@477b4cdf
07:58:57,808 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@477b4cdf
07:58:57,810 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5bda8e08
07:58:57,812 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@179ece50
07:58:57,814 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@4116aac9
07:58:57,815 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4116aac9
07:58:57,819 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7c6908d7
07:58:57,820 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c6908d7
07:58:57,822 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@bcec361
07:58:57,823 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bcec361
07:58:57,825 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@49438269
07:58:57,826 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@49438269
07:58:57,827 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@49438269
07:58:57,829 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55fe41ea
07:58:57,832 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@24269709
07:58:57,832 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24269709
07:58:57,833 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24269709
07:58:57,834 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a52dba3
07:58:57,836 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@45c7e403
07:58:57,837 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45c7e403
07:58:57,838 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@61322f9d
07:58:57,838 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61322f9d
07:58:57,840 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2362f559
07:58:57,841 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2362f559
07:58:57,843 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@544fa968
07:58:57,843 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@544fa968
07:58:57,850 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6c40365c
07:58:57,851 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6c40365c
07:58:57,854 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@55b0dcab
07:58:57,859 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37ceb1df
07:58:57,862 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@69453e37
07:58:57,862 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@69453e37
07:58:57,863 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@69453e37
07:58:57,864 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4009e306
07:58:57,865 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4009e306
07:58:57,865 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4009e306
07:58:57,867 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@63475ace
07:58:57,869 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@66d18979
07:58:57,869 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@66d18979
07:58:57,870 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@66d18979
07:58:57,872 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13b6aecc
07:58:57,872 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13b6aecc
07:58:57,873 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13b6aecc
07:58:57,873 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1e66f1f5
07:58:57,875 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@394df057
07:58:57,882 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@49e5f737
07:58:57,882 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49e5f737
07:58:57,883 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@687e99d8
07:58:57,888 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@424e1977
07:58:57,888 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@424e1977
07:58:57,893 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@623a8092
07:58:57,893 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@623a8092
07:58:57,894 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3098cf3b
07:58:57,895 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21b2e768
07:58:57,897 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@68567e20
07:58:57,899 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3e96bacf
07:58:57,900 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e96bacf
07:58:57,901 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c83dc97
07:58:57,901 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7748410a
07:58:57,901 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@740773a3
07:58:57,902 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@37f1104d
07:58:57,903 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55740540
07:58:57,905 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60015ef5
07:58:57,905 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f54a33d
07:58:57,906 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1018bde2
07:58:57,963 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
07:58:57,964 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
07:58:57,965 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@33d512c1
07:58:57,965 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@765d7657
07:58:57,966 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@51399530
07:58:57,966 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b71e916
07:58:57,966 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
07:58:57,967 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
07:58:57,967 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@175c2241
07:58:57,967 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7c7a06ec
07:58:57,968 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7c7a06ec
07:58:57,968 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c7a06ec
07:58:57,969 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
07:58:57,969 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
07:58:57,970 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@206a70ef
07:58:57,970 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@34e9fd99
07:58:57,971 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@34e9fd99
07:58:57,971 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34e9fd99
07:58:57,972 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
07:58:57,975 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
07:58:57,975 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@40a4337a
07:58:57,976 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
07:58:57,977 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
07:58:57,977 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7586beff
07:58:57,978 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
07:58:57,978 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
07:58:57,979 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e6f74c
07:58:57,979 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@385c9627
07:58:57,979 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@385c9627
07:58:57,980 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@229f66ed
07:58:57,980 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@229f66ed
07:58:57,981 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@477b4cdf
07:58:57,982 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@477b4cdf
07:58:57,982 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5bda8e08
07:58:57,982 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@179ece50
07:58:57,983 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@4116aac9
07:58:57,983 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4116aac9
07:58:57,984 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7c6908d7
07:58:57,984 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c6908d7
07:58:57,984 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@bcec361
07:58:57,984 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bcec361
07:58:57,985 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@49438269
07:58:57,985 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@49438269
07:58:57,986 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@49438269
07:58:57,986 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55fe41ea
07:58:57,986 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@24269709
07:58:57,987 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24269709
07:58:57,987 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24269709
07:58:57,988 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a52dba3
07:58:57,988 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@45c7e403
07:58:57,988 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45c7e403
07:58:57,989 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@61322f9d
07:58:57,990 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61322f9d
07:58:57,990 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2362f559
07:58:57,992 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2362f559
07:58:57,993 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@544fa968
07:58:57,993 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@544fa968
07:58:57,994 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6c40365c
07:58:57,994 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6c40365c
07:58:57,994 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@55b0dcab
07:58:57,995 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37ceb1df
07:58:57,995 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@69453e37
07:58:58,005 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@69453e37
07:58:58,006 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@69453e37
07:58:58,006 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4009e306
07:58:58,007 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4009e306
07:58:58,007 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4009e306
07:58:58,008 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@63475ace
07:58:58,008 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@66d18979
07:58:58,008 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@66d18979
07:58:58,009 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@66d18979
07:58:58,009 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13b6aecc
07:58:58,010 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13b6aecc
07:58:58,011 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13b6aecc
07:58:58,011 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1e66f1f5
07:58:58,011 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@394df057
07:58:58,012 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@49e5f737
07:58:58,012 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49e5f737
07:58:58,012 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@687e99d8
07:58:58,012 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@424e1977
07:58:58,013 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@424e1977
07:58:58,013 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@623a8092
07:58:58,013 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@623a8092
07:58:58,014 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3098cf3b
07:58:58,015 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21b2e768
07:58:58,016 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@68567e20
07:58:58,016 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3e96bacf
07:58:58,016 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e96bacf
07:58:58,017 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6babf3bf
07:58:58,017 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3059cbc
07:58:58,018 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7ea9e1e2
07:58:58,018 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@24fcf36f
07:58:58,019 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10feca44
07:58:58,019 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fb1549b
07:58:58,020 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ea6147e
07:58:58,020 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d02f94e
07:58:58,234 DEBUG DriverManagerDataSource:162 - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/cogdb]
07:58:58,564 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@2f62ea70
07:58:58,851 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:58,853 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'entityManagerFactory'
07:58:58,854  INFO DefaultListableBeanFactory:603 - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@de3a06f: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
07:58:58,854 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
07:58:58,854 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:58:58,855 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:58:58,855 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:58:58,858 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
07:58:58,862 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
07:58:58,863 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:58:58,863 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:58:58,863 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:58,863 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
07:58:58,864 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
07:58:58,864 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
07:58:58,864 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
07:58:58,864 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
07:58:58,864 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeBO'
07:58:58,865 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeBO'
07:58:58,870 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.bo.EmployeeBO]: AutowiredFieldElement for private com.cognizant.dao.EmployeeDAO com.cognizant.bo.EmployeeBO.employeeDAO
07:58:58,870 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeBO' to allow for resolving potential circular references
07:58:58,873 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeBO': AutowiredFieldElement for private com.cognizant.dao.EmployeeDAO com.cognizant.bo.EmployeeBO.employeeDAO
07:58:58,876 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeDAO'
07:58:58,876 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeDAO'
07:58:58,881 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.dao.EmployeeDAO]: PersistenceElement for private javax.persistence.EntityManager com.cognizant.dao.EmployeeDAO.em
07:58:58,881 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeDAO' to allow for resolving potential circular references
07:58:58,883 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeDAO': PersistenceElement for private javax.persistence.EntityManager com.cognizant.dao.EmployeeDAO.em
07:58:58,884 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
07:58:58,884 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:58,897 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:58,898 DEBUG AnnotationTransactionAttributeSource:107 - Adding transactional method 'EmployeeDAO.addEmployee' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
07:58:58,904 DEBUG InfrastructureAdvisorAutoProxyCreator:540 - Creating implicit proxy for bean 'employeeDAO' with 0 common interceptors and 1 specific interceptors
07:58:58,911 DEBUG CglibAopProxy:156 - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.cognizant.dao.EmployeeDAO@79da1ec0]
07:58:58,982 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
07:58:58,986 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public void com.cognizant.dao.EmployeeDAO.addEmployee(com.cognizant.entity.Employee)
07:58:58,987 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.util.List com.cognizant.dao.EmployeeDAO.findEmployeesBySalary(double)
07:58:58,987 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public com.cognizant.entity.Employee com.cognizant.dao.EmployeeDAO.incrementSalary(int,double)
07:58:58,988 DEBUG CglibAopProxy:761 - Found finalize() method - using NO_OVERRIDE
07:58:58,989 DEBUG CglibAopProxy:773 - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
07:58:58,989 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
07:58:58,989 DEBUG CglibAopProxy:778 - Found 'hashCode' method: public native int java.lang.Object.hashCode()
07:58:58,990 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
07:58:58,991 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
07:58:58,991 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
07:58:58,991 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
07:58:58,992 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
07:58:58,992 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:58:58,992 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:58:58,992 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
07:58:58,993 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
07:58:58,993 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
07:58:58,993 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
07:58:58,994 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
07:58:58,994 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
07:58:58,994 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
07:58:58,994 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
07:58:58,995 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
07:58:58,995 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
07:58:58,995 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
07:58:58,995 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:58:58,996 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
07:58:58,996 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
07:58:58,996 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
07:58:58,996 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
07:58:58,997 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
07:58:59,024 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeDAO'
07:58:59,024 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeBO' to bean named 'employeeDAO'
07:58:59,025 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:59,025 DEBUG AnnotationTransactionAttributeSource:107 - Adding transactional method 'EmployeeBO.incrementSalary' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
07:58:59,026 DEBUG InfrastructureAdvisorAutoProxyCreator:540 - Creating implicit proxy for bean 'employeeBO' with 0 common interceptors and 1 specific interceptors
07:58:59,026 DEBUG CglibAopProxy:156 - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.cognizant.bo.EmployeeBO@2cb3d0f7]
07:58:59,027 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public void com.cognizant.bo.EmployeeBO.addEmployees(java.util.List) throws java.lang.Exception
07:58:59,027 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.util.List com.cognizant.bo.EmployeeBO.findEmployeesBySalary(double)
07:58:59,027 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public com.cognizant.entity.Employee com.cognizant.bo.EmployeeBO.incrementSalary(int,double) throws java.lang.Exception
07:58:59,027 DEBUG CglibAopProxy:761 - Found finalize() method - using NO_OVERRIDE
07:58:59,028 DEBUG CglibAopProxy:773 - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
07:58:59,028 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
07:58:59,028 DEBUG CglibAopProxy:778 - Found 'hashCode' method: public native int java.lang.Object.hashCode()
07:58:59,028 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
07:58:59,028 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
07:58:59,028 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
07:58:59,029 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
07:58:59,029 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
07:58:59,029 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:58:59,029 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:58:59,029 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
07:58:59,029 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
07:58:59,029 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
07:58:59,030 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
07:58:59,030 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
07:58:59,030 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
07:58:59,030 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
07:58:59,030 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
07:58:59,030 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
07:58:59,031 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
07:58:59,031 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
07:58:59,031 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
07:58:59,032 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
07:58:59,032 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
07:58:59,032 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
07:58:59,032 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
07:58:59,033 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
07:58:59,045 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeBO'
07:58:59,046 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeController'
07:58:59,046 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeController'
07:58:59,051 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.controller.EmployeeController]: AutowiredFieldElement for com.cognizant.service.EmployeeService com.cognizant.controller.EmployeeController.service
07:58:59,051 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeController' to allow for resolving potential circular references
07:58:59,053 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeController': AutowiredFieldElement for com.cognizant.service.EmployeeService com.cognizant.controller.EmployeeController.service
07:58:59,054 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeService'
07:58:59,054 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeService'
07:58:59,055 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.service.EmployeeService]: AutowiredFieldElement for com.cognizant.bo.EmployeeBO com.cognizant.service.EmployeeService.bo
07:58:59,055 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeService' to allow for resolving potential circular references
07:58:59,057 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeService': AutowiredFieldElement for com.cognizant.bo.EmployeeBO com.cognizant.service.EmployeeService.bo
07:58:59,058 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeBO'
07:58:59,058 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeService' to bean named 'employeeBO'
07:58:59,059 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:59,059 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeService'
07:58:59,060 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeController' to bean named 'employeeService'
07:58:59,060 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:59,062 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeController'
07:58:59,062 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeDAO'
07:58:59,063 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeService'
07:58:59,063 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'messageSource'
07:58:59,063 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'dataSource'
07:58:59,063 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
07:58:59,064 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'transactionManager'
07:58:59,064 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'transactionManager'
07:58:59,074 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
07:58:59,079 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
07:58:59,080 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'transactionManager'
07:58:59,082 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:59,083 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'transactionManager'
07:58:59,084 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
07:58:59,087 DEBUG GenericApplicationContext:863 - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@31e3250d]
07:58:59,088 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'lifecycleProcessor'
07:58:59,094 DEBUG PropertySourcesPropertyResolver:81 - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
07:58:59,094 DEBUG PropertySourcesPropertyResolver:81 - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
07:58:59,096 DEBUG PropertySourcesPropertyResolver:103 - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
07:58:59,097 DEBUG CacheAwareContextLoaderDelegate:97 - Storing ApplicationContext in cache under key [[MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
07:58:59,097 DEBUG cache:114 - Spring test ApplicationContext cache statistics: [ContextCache@6722db6e size = 1, hitCount = 0, missCount = 1, parentContextCount = 0]
07:58:59,099 DEBUG InjectionMetadata:86 - Processing injected element of bean 'test.java.TestEmployee': AutowiredFieldElement for com.cognizant.service.EmployeeService test.java.TestEmployee.service
07:58:59,102 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeService'
07:58:59,102 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'test.java.TestEmployee' to bean named 'employeeService'
07:58:59,103 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
07:58:59,108  WARN TestEmployee:73 - Test *******
07:58:59,109 DEBUG DirtiesContextTestExecutionListener:107 - After test method: context [[TestContext@2ed94a8b testClass = TestEmployee, testInstance = test.java.TestEmployee@38082d64, testMethod = testSalaryIncrement@TestEmployee, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
07:58:59,110 DEBUG DirtiesContextTestExecutionListener:138 - After test class: context [[TestContext@2ed94a8b testClass = TestEmployee, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
07:58:59,112  INFO GenericApplicationContext:1048 - Closing org.springframework.context.support.GenericApplicationContext@13c78c0b: startup date [Wed May 31 07:58:57 IST 2017]; root of context hierarchy
07:58:59,113 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'lifecycleProcessor'
07:58:59,113  INFO DefaultListableBeanFactory:444 - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@de3a06f: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
07:58:59,118 DEBUG DefaultListableBeanFactory:500 - Retrieved dependent beans for bean 'employeeService': [test.java.TestEmployee]
07:58:59,119 DEBUG DisposableBeanAdapter:227 - Invoking destroy() on bean with name 'entityManagerFactory'
07:58:59,119  INFO LocalContainerEntityManagerFactoryBean:441 - Closing JPA EntityManagerFactory for persistence unit 'jpaData'
07:58:59,119 DEBUG DefaultListableBeanFactory:500 - Retrieved dependent beans for bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3': [entityManagerFactory]
08:04:16,178 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@73a1e9a9
08:04:16,183 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@73a1e9a9
08:04:16,183 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a1e9a9
08:04:16,190 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41d477ed
08:04:16,198 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@443118b0
08:04:16,199 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@618b19ad
08:04:16,204 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@411f53a0
08:04:16,204 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@411f53a0
08:04:16,205 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@411f53a0
08:04:16,209 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@3754a4bf
08:04:16,209 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@3754a4bf
08:04:16,210 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3754a4bf
08:04:16,215 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@1d296da
08:04:16,215 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@1d296da
08:04:16,216 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d296da
08:04:16,223 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6c6cb480
08:04:16,224 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6c6cb480
08:04:16,225 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6c6cb480
08:04:16,233 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@38425407
08:04:16,234 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@38425407
08:04:16,234 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38425407
08:04:16,243 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@327514f
08:04:16,243 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@327514f
08:04:16,244 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@327514f
08:04:16,252 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5542c4ed
08:04:16,252 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5542c4ed
08:04:16,252 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5542c4ed
08:04:16,257 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10683d9d
08:04:16,258 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10683d9d
08:04:16,261 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@139982de
08:04:16,261 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@139982de
08:04:16,265 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@31190526
08:04:16,265 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@31190526
08:04:16,272 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@77c2494c
08:04:16,273 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e800aaa
08:04:16,276 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@3b0090a4
08:04:16,277 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b0090a4
08:04:16,281 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@15de0b3c
08:04:16,281 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15de0b3c
08:04:16,283 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@79079097
08:04:16,284 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79079097
08:04:16,293 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3d285d7e
08:04:16,293 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3d285d7e
08:04:16,293 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3d285d7e
08:04:16,295 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@367ffa75
08:04:16,297 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@fbd1f6
08:04:16,297 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fbd1f6
08:04:16,298 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fbd1f6
08:04:16,299 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a8c8dcf
08:04:16,302 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@2a5c8d3f
08:04:16,303 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a5c8d3f
08:04:16,306 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@2925bf5b
08:04:16,306 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2925bf5b
08:04:16,310 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6ad82709
08:04:16,310 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6ad82709
08:04:16,312 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@b2c9a9c
08:04:16,312 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b2c9a9c
08:04:16,316 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24313fcc
08:04:16,316 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24313fcc
08:04:16,318 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a2befb
08:04:16,319 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@38afe297
08:04:16,323 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@7c9d8e2
08:04:16,323 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7c9d8e2
08:04:16,324 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@7c9d8e2
08:04:16,327 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6f4a47c7
08:04:16,327 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6f4a47c7
08:04:16,328 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6f4a47c7
08:04:16,331 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@43c1b556
08:04:16,335 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@4988d8b8
08:04:16,335 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4988d8b8
08:04:16,336 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@4988d8b8
08:04:16,337 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bccb269
08:04:16,337 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bccb269
08:04:16,338 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bccb269
08:04:16,338 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@158a8276
08:04:16,339 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@4e50c791
08:04:16,345 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@561b6512
08:04:16,345 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@561b6512
08:04:16,348 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@445b295b
08:04:16,353 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@291b4bf5
08:04:16,353 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@291b4bf5
08:04:16,356 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@6a2b953e
08:04:16,356 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a2b953e
08:04:16,357 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@548e6d58
08:04:16,358 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@175b9425
08:04:16,359 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@57250572
08:04:16,366 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3f56875e
08:04:16,367 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f56875e
08:04:16,367 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3571b748
08:04:16,368 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e96bacf
08:04:16,368 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@484970b0
08:04:16,368 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4470f8a6
08:04:16,369 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c83dc97
08:04:16,369 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7748410a
08:04:16,370 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@740773a3
08:04:16,370 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@37f1104d
08:04:16,589 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@73a1e9a9
08:04:16,589 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@73a1e9a9
08:04:16,590 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a1e9a9
08:04:16,590 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41d477ed
08:04:16,591 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@443118b0
08:04:16,591 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@618b19ad
08:04:16,592 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@411f53a0
08:04:16,592 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@411f53a0
08:04:16,593 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@411f53a0
08:04:16,593 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@3754a4bf
08:04:16,594 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@3754a4bf
08:04:16,594 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3754a4bf
08:04:16,595 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@1d296da
08:04:16,595 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@1d296da
08:04:16,596 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d296da
08:04:16,596 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6c6cb480
08:04:16,596 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6c6cb480
08:04:16,597 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6c6cb480
08:04:16,597 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@38425407
08:04:16,598 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@38425407
08:04:16,598 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38425407
08:04:16,599 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@327514f
08:04:16,599 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@327514f
08:04:16,600 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@327514f
08:04:16,600 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5542c4ed
08:04:16,600 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5542c4ed
08:04:16,601 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5542c4ed
08:04:16,602 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10683d9d
08:04:16,603 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10683d9d
08:04:16,603 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@139982de
08:04:16,604 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@139982de
08:04:16,604 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@31190526
08:04:16,605 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@31190526
08:04:16,605 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@77c2494c
08:04:16,605 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e800aaa
08:04:16,606 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@3b0090a4
08:04:16,606 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b0090a4
08:04:16,607 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@15de0b3c
08:04:16,607 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15de0b3c
08:04:16,607 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@79079097
08:04:16,608 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79079097
08:04:16,608 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3d285d7e
08:04:16,608 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3d285d7e
08:04:16,609 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3d285d7e
08:04:16,609 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@367ffa75
08:04:16,610 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@fbd1f6
08:04:16,610 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fbd1f6
08:04:16,610 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fbd1f6
08:04:16,610 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a8c8dcf
08:04:16,611 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@2a5c8d3f
08:04:16,611 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a5c8d3f
08:04:16,611 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@2925bf5b
08:04:16,611 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2925bf5b
08:04:16,612 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6ad82709
08:04:16,612 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6ad82709
08:04:16,612 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@b2c9a9c
08:04:16,612 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b2c9a9c
08:04:16,613 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24313fcc
08:04:16,613 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24313fcc
08:04:16,613 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a2befb
08:04:16,613 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@38afe297
08:04:16,613 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@7c9d8e2
08:04:16,614 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7c9d8e2
08:04:16,614 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@7c9d8e2
08:04:16,614 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6f4a47c7
08:04:16,614 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6f4a47c7
08:04:16,615 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6f4a47c7
08:04:16,615 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@43c1b556
08:04:16,615 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@4988d8b8
08:04:16,615 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4988d8b8
08:04:16,616 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@4988d8b8
08:04:16,616 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bccb269
08:04:16,616 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bccb269
08:04:16,616 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bccb269
08:04:16,616 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@158a8276
08:04:16,617 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@4e50c791
08:04:16,617 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@561b6512
08:04:16,617 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@561b6512
08:04:16,617 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@445b295b
08:04:16,617 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@291b4bf5
08:04:16,618 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@291b4bf5
08:04:16,618 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@6a2b953e
08:04:16,618 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a2b953e
08:04:16,619 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@548e6d58
08:04:16,619 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@175b9425
08:04:16,619 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@57250572
08:04:16,620 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3f56875e
08:04:16,620 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f56875e
08:04:16,620 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@33990a0c
08:04:16,621 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4de4b452
08:04:16,621 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@50b5ac82
08:04:16,621 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@101952da
08:04:16,622 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6babf3bf
08:04:16,622 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3059cbc
08:04:16,622 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ea9e1e2
08:04:16,623 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@24fcf36f
08:04:17,945 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@64c63c79
08:04:18,869  WARN TestEmployee:73 - Test *******
08:07:35,468 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@73a1e9a9
08:07:35,473 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@73a1e9a9
08:07:35,474 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a1e9a9
08:07:35,481 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41d477ed
08:07:35,491 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@443118b0
08:07:35,493 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@618b19ad
08:07:35,497 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@411f53a0
08:07:35,497 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@411f53a0
08:07:35,498 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@411f53a0
08:07:35,501 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@3754a4bf
08:07:35,502 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@3754a4bf
08:07:35,502 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3754a4bf
08:07:35,507 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@1d296da
08:07:35,508 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@1d296da
08:07:35,508 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d296da
08:07:35,515 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6c6cb480
08:07:35,517 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6c6cb480
08:07:35,517 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6c6cb480
08:07:35,524 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@38425407
08:07:35,525 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@38425407
08:07:35,525 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38425407
08:07:35,532 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@327514f
08:07:35,533 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@327514f
08:07:35,533 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@327514f
08:07:35,537 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5542c4ed
08:07:35,537 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5542c4ed
08:07:35,538 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5542c4ed
08:07:35,542 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10683d9d
08:07:35,543 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10683d9d
08:07:35,547 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@139982de
08:07:35,547 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@139982de
08:07:35,553 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@31190526
08:07:35,554 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@31190526
08:07:35,557 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@77c2494c
08:07:35,559 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e800aaa
08:07:35,563 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@3b0090a4
08:07:35,564 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b0090a4
08:07:35,569 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@15de0b3c
08:07:35,569 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15de0b3c
08:07:35,571 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@79079097
08:07:35,572 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79079097
08:07:35,582 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3d285d7e
08:07:35,582 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3d285d7e
08:07:35,582 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3d285d7e
08:07:35,584 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@367ffa75
08:07:35,586 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@fbd1f6
08:07:35,587 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fbd1f6
08:07:35,587 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fbd1f6
08:07:35,588 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a8c8dcf
08:07:35,592 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@2a5c8d3f
08:07:35,592 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a5c8d3f
08:07:35,595 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@2925bf5b
08:07:35,596 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2925bf5b
08:07:35,599 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6ad82709
08:07:35,600 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6ad82709
08:07:35,601 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@b2c9a9c
08:07:35,601 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b2c9a9c
08:07:35,605 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24313fcc
08:07:35,605 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24313fcc
08:07:35,606 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a2befb
08:07:35,607 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@38afe297
08:07:35,612 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@7c9d8e2
08:07:35,612 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7c9d8e2
08:07:35,613 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@7c9d8e2
08:07:35,614 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6f4a47c7
08:07:35,615 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6f4a47c7
08:07:35,616 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6f4a47c7
08:07:35,619 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@43c1b556
08:07:35,623 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@4988d8b8
08:07:35,623 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4988d8b8
08:07:35,624 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@4988d8b8
08:07:35,625 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bccb269
08:07:35,626 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bccb269
08:07:35,626 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bccb269
08:07:35,627 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@158a8276
08:07:35,628 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@4e50c791
08:07:35,634 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@561b6512
08:07:35,634 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@561b6512
08:07:35,637 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@445b295b
08:07:35,643 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@291b4bf5
08:07:35,644 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@291b4bf5
08:07:35,646 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@6a2b953e
08:07:35,647 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a2b953e
08:07:35,648 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@548e6d58
08:07:35,648 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@175b9425
08:07:35,650 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@57250572
08:07:35,657 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3f56875e
08:07:35,658 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f56875e
08:07:35,659 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3571b748
08:07:35,661 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3e96bacf
08:07:35,661 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@484970b0
08:07:35,663 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4470f8a6
08:07:35,664 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c83dc97
08:07:35,664 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7748410a
08:07:35,665 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@740773a3
08:07:35,666 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@37f1104d
08:07:35,867 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@73a1e9a9
08:07:35,867 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@73a1e9a9
08:07:35,867 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73a1e9a9
08:07:35,868 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@41d477ed
08:07:35,868 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@443118b0
08:07:35,868 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@618b19ad
08:07:35,869 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@411f53a0
08:07:35,869 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@411f53a0
08:07:35,869 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@411f53a0
08:07:35,870 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@3754a4bf
08:07:35,870 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@3754a4bf
08:07:35,870 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3754a4bf
08:07:35,870 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@1d296da
08:07:35,871 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@1d296da
08:07:35,871 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1d296da
08:07:35,871 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6c6cb480
08:07:35,871 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6c6cb480
08:07:35,872 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6c6cb480
08:07:35,872 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@38425407
08:07:35,872 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@38425407
08:07:35,872 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38425407
08:07:35,872 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@327514f
08:07:35,873 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@327514f
08:07:35,873 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@327514f
08:07:35,873 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5542c4ed
08:07:35,873 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@5542c4ed
08:07:35,873 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5542c4ed
08:07:35,874 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10683d9d
08:07:35,874 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10683d9d
08:07:35,874 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@139982de
08:07:35,875 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@139982de
08:07:35,876 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@31190526
08:07:35,877 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@31190526
08:07:35,878 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@77c2494c
08:07:35,878 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e800aaa
08:07:35,879 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@3b0090a4
08:07:35,879 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b0090a4
08:07:35,880 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@15de0b3c
08:07:35,880 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15de0b3c
08:07:35,881 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@79079097
08:07:35,881 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79079097
08:07:35,882 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3d285d7e
08:07:35,882 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3d285d7e
08:07:35,882 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3d285d7e
08:07:35,883 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@367ffa75
08:07:35,883 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@fbd1f6
08:07:35,884 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fbd1f6
08:07:35,884 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fbd1f6
08:07:35,884 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a8c8dcf
08:07:35,885 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@2a5c8d3f
08:07:35,885 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a5c8d3f
08:07:35,886 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@2925bf5b
08:07:35,886 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2925bf5b
08:07:35,886 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6ad82709
08:07:35,887 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6ad82709
08:07:35,887 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@b2c9a9c
08:07:35,887 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b2c9a9c
08:07:35,888 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24313fcc
08:07:35,888 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24313fcc
08:07:35,888 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41a2befb
08:07:35,890 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@38afe297
08:07:35,890 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@7c9d8e2
08:07:35,891 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7c9d8e2
08:07:35,892 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@7c9d8e2
08:07:35,893 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6f4a47c7
08:07:35,894 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6f4a47c7
08:07:35,894 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6f4a47c7
08:07:35,895 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@43c1b556
08:07:35,895 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@4988d8b8
08:07:35,896 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4988d8b8
08:07:35,896 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@4988d8b8
08:07:35,897 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@bccb269
08:07:35,898 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@bccb269
08:07:35,898 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@bccb269
08:07:35,899 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@158a8276
08:07:35,899 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@4e50c791
08:07:35,899 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@561b6512
08:07:35,900 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@561b6512
08:07:35,900 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@445b295b
08:07:35,901 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@291b4bf5
08:07:35,901 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@291b4bf5
08:07:35,902 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@6a2b953e
08:07:35,902 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6a2b953e
08:07:35,902 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@548e6d58
08:07:35,903 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@175b9425
08:07:35,903 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@57250572
08:07:35,903 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3f56875e
08:07:35,903 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f56875e
08:07:35,904 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@33990a0c
08:07:35,904 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4de4b452
08:07:35,904 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@50b5ac82
08:07:35,905 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@101952da
08:07:35,905 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6babf3bf
08:07:35,905 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3059cbc
08:07:35,906 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ea9e1e2
08:07:35,906 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@24fcf36f
08:07:37,222 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@64c63c79
08:07:38,136  WARN TestEmployee:75 - Test *******
08:07:38,312  WARN EmployeeDAO:42 - Id is : 1
08:07:38,367 TRACE BasicBinder:83 - binding parameter [1] as [INTEGER] - 1
08:07:38,382 TRACE BasicExtractor:72 - Found [Ravi] as column [name2_0_0_]
08:07:38,383 TRACE BasicExtractor:72 - Found [39344.44] as column [salary3_0_0_]
08:07:38,415 TRACE BasicBinder:83 - binding parameter [1] as [VARCHAR] - Ravi
08:07:38,416 TRACE BasicBinder:83 - binding parameter [2] as [DOUBLE] - 44344.44
08:07:38,417 TRACE BasicBinder:83 - binding parameter [3] as [INTEGER] - 1
08:08:04,669 DEBUG SpringJUnit4ClassRunner:106 - SpringJUnit4ClassRunner constructor called with [class test.java.TestEmployee].
08:08:04,740 DEBUG AbstractDelegatingSmartContextLoader:90 - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@6fffcba5 declaringClass = 'test.java.TestEmployee', classes = '{}', locations = '{classpath:beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
08:08:04,742 DEBUG ContextLoaderUtils:471 - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [test.java.TestEmployee]
08:08:04,745 DEBUG TestContextManager:186 - @TestExecutionListeners is not present for class [test.java.TestEmployee]: using defaults.
08:08:04,765 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
08:08:04,765 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
08:08:04,779 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
08:08:04,779 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
08:08:04,780 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
08:08:04,780 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
08:08:04,781 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
08:08:04,781 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
08:08:04,783 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
08:08:04,783 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
08:08:04,785 DEBUG DependencyInjectionTestExecutionListener:73 - Performing dependency injection for test context [[TestContext@2ed94a8b testClass = TestEmployee, testInstance = test.java.TestEmployee@38082d64, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
08:08:04,786 DEBUG AbstractDelegatingSmartContextLoader:100 - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
08:08:04,789 DEBUG AbstractGenericContextLoader:104 - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
08:08:04,880 DEBUG StandardEnvironment:108 - Adding [systemProperties] PropertySource with lowest search precedence
08:08:04,882 DEBUG StandardEnvironment:108 - Adding [systemEnvironment] PropertySource with lowest search precedence
08:08:04,883 DEBUG StandardEnvironment:127 - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
08:08:04,895  INFO XmlBeanDefinitionReader:316 - Loading XML bean definitions from class path resource [beans.xml]
08:08:04,917 DEBUG DefaultDocumentLoader:72 - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
08:08:04,960 DEBUG PluggableSchemaResolver:140 - Loading schema mappings from [META-INF/spring.schemas]
08:08:04,966 DEBUG PluggableSchemaResolver:146 - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
08:08:04,968 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
08:08:05,027 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.2.xsd
08:08:05,034 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
08:08:05,042 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.2.xsd
08:08:05,065 DEBUG DefaultBeanDefinitionDocumentReader:99 - Loading bean definitions
08:08:05,081 DEBUG DefaultNamespaceHandlerResolver:156 - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
08:08:05,145 DEBUG PathMatchingResourcePatternResolver:553 - Looking for matching resources in directory tree [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant]
08:08:05,146 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
08:08:05,148 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
08:08:05,149 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
08:08:05,151 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
08:08:05,152 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/entity] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
08:08:05,154 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/exception] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
08:08:05,155 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
08:08:05,157 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/vo] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
08:08:05,162 DEBUG PathMatchingResourcePatternResolver:354 - Resolved location pattern [classpath*:com/cognizant/*/**/*.class] to resources [file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo/EmployeeBO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/ApplicationController.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/EmployeeController.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/ApplicationDAO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/EmployeeDAO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/entity/Employee.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/exception/ApplicationException.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/ApplicationService.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/EmployeeService.class]]
08:08:05,205 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo/EmployeeBO.class]
08:08:05,216 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/EmployeeController.class]
08:08:05,219 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/EmployeeDAO.class]
08:08:05,222 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/EmployeeService.class]
08:08:05,252 DEBUG BeanDefinitionParserDelegate:494 - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3]
08:08:05,254 DEBUG XmlBeanDefinitionReader:216 - Loaded 17 bean definitions from location pattern [classpath:beans.xml]
08:08:05,260  INFO GenericApplicationContext:515 - Refreshing org.springframework.context.support.GenericApplicationContext@13c78c0b: startup date [Wed May 31 08:08:05 IST 2017]; root of context hierarchy
08:08:05,260 DEBUG GenericApplicationContext:545 - Bean factory for org.springframework.context.support.GenericApplicationContext@13c78c0b: org.springframework.beans.factory.support.DefaultListableBeanFactory@de3a06f: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager]; root of factory hierarchy
08:08:05,290 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
08:08:05,291 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
08:08:05,313 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
08:08:05,316 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
08:08:05,370 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
08:08:05,371 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
08:08:05,372 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
08:08:05,372 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
08:08:05,373 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
08:08:05,373 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
08:08:05,374 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
08:08:05,374 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
08:08:05,375 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
08:08:05,375 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
08:08:05,390 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
08:08:05,391 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
08:08:05,391 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
08:08:05,392 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
08:08:05,392 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
08:08:05,392 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
08:08:05,393 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
08:08:05,393 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
08:08:05,394 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
08:08:05,394 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
08:08:05,394 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
08:08:05,395 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
08:08:05,418 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
08:08:05,456 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
08:08:05,457 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'messageSource'
08:08:05,458 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'messageSource'
08:08:05,464 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'messageSource' to allow for resolving potential circular references
08:08:05,471 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:05,471 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:05,474 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
08:08:05,491 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
08:08:05,492 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
08:08:05,493 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
08:08:05,496 DEBUG BeanFactoryAdvisorRetrievalHelper:87 - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:05,499 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
08:08:05,501 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:05,504 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'messageSource'
08:08:05,505 DEBUG GenericApplicationContext:802 - Using MessageSource [org.springframework.context.support.ReloadableResourceBundleMessageSource: basenames=[]]
08:08:05,508 DEBUG GenericApplicationContext:836 - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1c93084c]
08:08:05,511 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'entityManagerFactory'
08:08:05,511 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'entityManagerFactory'
08:08:05,527 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
08:08:05,534 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'dataSource'
08:08:05,534 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'dataSource'
08:08:05,537 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
08:08:05,550  INFO DriverManagerDataSource:153 - Loaded JDBC driver: com.mysql.jdbc.Driver
08:08:05,550 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:05,552 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'dataSource'
08:08:05,552 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3'
08:08:05,564 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:05,565 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3'
08:08:05,569 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
08:08:05,580  INFO LocalContainerEntityManagerFactoryBean:287 - Building JPA container EntityManagerFactory for persistence unit 'jpaData'
08:08:05,631 DEBUG logging:143 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
08:08:05,663 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
08:08:05,664 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
08:08:05,664 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@33d512c1
08:08:05,666 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@765d7657
08:08:05,668 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@51399530
08:08:05,669 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b71e916
08:08:05,674 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
08:08:05,675 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
08:08:05,675 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@175c2241
08:08:05,677 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7c7a06ec
08:08:05,678 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7c7a06ec
08:08:05,678 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c7a06ec
08:08:05,681 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
08:08:05,682 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
08:08:05,683 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@206a70ef
08:08:05,688 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@34e9fd99
08:08:05,689 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@34e9fd99
08:08:05,690 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34e9fd99
08:08:05,694 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
08:08:05,697 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
08:08:05,698 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@40a4337a
08:08:05,700 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
08:08:05,701 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
08:08:05,702 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7586beff
08:08:05,705 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
08:08:05,705 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
08:08:05,706 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e6f74c
08:08:05,709 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@385c9627
08:08:05,710 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@385c9627
08:08:05,712 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@229f66ed
08:08:05,712 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@229f66ed
08:08:05,714 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@477b4cdf
08:08:05,715 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@477b4cdf
08:08:05,716 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5bda8e08
08:08:05,718 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@179ece50
08:08:05,721 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@4116aac9
08:08:05,721 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4116aac9
08:08:05,726 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7c6908d7
08:08:05,727 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c6908d7
08:08:05,729 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@bcec361
08:08:05,730 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bcec361
08:08:05,733 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@49438269
08:08:05,733 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@49438269
08:08:05,734 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@49438269
08:08:05,736 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55fe41ea
08:08:05,738 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@24269709
08:08:05,738 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24269709
08:08:05,739 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24269709
08:08:05,741 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a52dba3
08:08:05,743 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@45c7e403
08:08:05,744 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45c7e403
08:08:05,746 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@61322f9d
08:08:05,746 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61322f9d
08:08:05,748 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2362f559
08:08:05,748 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2362f559
08:08:05,750 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@544fa968
08:08:05,750 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@544fa968
08:08:05,753 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6c40365c
08:08:05,754 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6c40365c
08:08:05,756 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@55b0dcab
08:08:05,757 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37ceb1df
08:08:05,759 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@69453e37
08:08:05,759 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@69453e37
08:08:05,760 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@69453e37
08:08:05,762 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4009e306
08:08:05,762 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4009e306
08:08:05,762 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4009e306
08:08:05,764 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@63475ace
08:08:05,766 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@66d18979
08:08:05,766 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@66d18979
08:08:05,766 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@66d18979
08:08:05,768 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13b6aecc
08:08:05,769 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13b6aecc
08:08:05,769 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13b6aecc
08:08:05,770 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1e66f1f5
08:08:05,771 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@394df057
08:08:05,778 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@49e5f737
08:08:05,778 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49e5f737
08:08:05,779 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@687e99d8
08:08:05,783 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@424e1977
08:08:05,783 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@424e1977
08:08:05,787 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@623a8092
08:08:05,788 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@623a8092
08:08:05,789 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3098cf3b
08:08:05,791 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21b2e768
08:08:05,792 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@68567e20
08:08:05,796 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3e96bacf
08:08:05,797 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e96bacf
08:08:05,798 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c83dc97
08:08:05,798 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7748410a
08:08:05,799 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@740773a3
08:08:05,799 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@37f1104d
08:08:05,800 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@55740540
08:08:05,800 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60015ef5
08:08:05,800 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f54a33d
08:08:05,801 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1018bde2
08:08:05,851 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
08:08:05,851 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@33d512c1
08:08:05,852 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@33d512c1
08:08:05,852 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@765d7657
08:08:05,853 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@51399530
08:08:05,853 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b71e916
08:08:05,854 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
08:08:05,855 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@175c2241
08:08:05,855 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@175c2241
08:08:05,855 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@7c7a06ec
08:08:05,856 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@7c7a06ec
08:08:05,856 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7c7a06ec
08:08:05,857 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
08:08:05,858 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@206a70ef
08:08:05,858 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@206a70ef
08:08:05,858 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@34e9fd99
08:08:05,859 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@34e9fd99
08:08:05,860 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@34e9fd99
08:08:05,861 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
08:08:05,863 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@40a4337a
08:08:05,864 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@40a4337a
08:08:05,865 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
08:08:05,866 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@7586beff
08:08:05,867 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7586beff
08:08:05,867 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
08:08:05,868 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@7e6f74c
08:08:05,868 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e6f74c
08:08:05,868 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@385c9627
08:08:05,869 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@385c9627
08:08:05,869 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@229f66ed
08:08:05,869 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@229f66ed
08:08:05,870 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@477b4cdf
08:08:05,870 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@477b4cdf
08:08:05,871 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5bda8e08
08:08:05,871 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@179ece50
08:08:05,871 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@4116aac9
08:08:05,872 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4116aac9
08:08:05,872 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@7c6908d7
08:08:05,872 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c6908d7
08:08:05,873 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@bcec361
08:08:05,873 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@bcec361
08:08:05,873 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@49438269
08:08:05,874 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@49438269
08:08:05,875 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@49438269
08:08:05,877 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55fe41ea
08:08:05,879 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@24269709
08:08:05,880 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24269709
08:08:05,881 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24269709
08:08:05,882 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a52dba3
08:08:05,882 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@45c7e403
08:08:05,883 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@45c7e403
08:08:05,883 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@61322f9d
08:08:05,885 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61322f9d
08:08:05,886 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2362f559
08:08:05,889 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2362f559
08:08:05,891 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@544fa968
08:08:05,892 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@544fa968
08:08:05,892 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6c40365c
08:08:05,893 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6c40365c
08:08:05,893 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@55b0dcab
08:08:05,894 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@37ceb1df
08:08:05,894 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@69453e37
08:08:05,895 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@69453e37
08:08:05,897 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@69453e37
08:08:05,898 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4009e306
08:08:05,899 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4009e306
08:08:05,899 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4009e306
08:08:05,900 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@63475ace
08:08:05,900 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@66d18979
08:08:05,901 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@66d18979
08:08:05,901 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@66d18979
08:08:05,901 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13b6aecc
08:08:05,902 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13b6aecc
08:08:05,902 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13b6aecc
08:08:05,903 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@1e66f1f5
08:08:05,903 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@394df057
08:08:05,904 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@49e5f737
08:08:05,904 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49e5f737
08:08:05,904 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@687e99d8
08:08:05,905 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@424e1977
08:08:05,905 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@424e1977
08:08:05,905 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@623a8092
08:08:05,906 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@623a8092
08:08:05,906 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3098cf3b
08:08:05,906 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21b2e768
08:08:05,906 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@68567e20
08:08:05,907 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@3e96bacf
08:08:05,907 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e96bacf
08:08:05,908 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6babf3bf
08:08:05,908 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3059cbc
08:08:05,909 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7ea9e1e2
08:08:05,909 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@24fcf36f
08:08:05,910 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10feca44
08:08:05,910 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fb1549b
08:08:05,910 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ea6147e
08:08:05,911 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d02f94e
08:08:06,113 DEBUG DriverManagerDataSource:162 - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/cogdb]
08:08:06,432 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@2f62ea70
08:08:06,715 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:06,718 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'entityManagerFactory'
08:08:06,719  INFO DefaultListableBeanFactory:603 - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@de3a06f: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
08:08:06,719 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
08:08:06,719 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
08:08:06,719 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
08:08:06,719 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
08:08:06,721 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
08:08:06,725 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
08:08:06,726 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
08:08:06,726 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
08:08:06,726 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:06,727 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
08:08:06,727 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
08:08:06,727 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
08:08:06,727 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
08:08:06,727 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
08:08:06,728 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeBO'
08:08:06,728 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeBO'
08:08:06,735 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.bo.EmployeeBO]: AutowiredFieldElement for private com.cognizant.dao.EmployeeDAO com.cognizant.bo.EmployeeBO.employeeDAO
08:08:06,736 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeBO' to allow for resolving potential circular references
08:08:06,737 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeBO': AutowiredFieldElement for private com.cognizant.dao.EmployeeDAO com.cognizant.bo.EmployeeBO.employeeDAO
08:08:06,740 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeDAO'
08:08:06,740 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeDAO'
08:08:06,744 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.dao.EmployeeDAO]: PersistenceElement for private javax.persistence.EntityManager com.cognizant.dao.EmployeeDAO.em
08:08:06,745 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeDAO' to allow for resolving potential circular references
08:08:06,747 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeDAO': PersistenceElement for private javax.persistence.EntityManager com.cognizant.dao.EmployeeDAO.em
08:08:06,747 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
08:08:06,748 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:06,759 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:06,760 DEBUG AnnotationTransactionAttributeSource:107 - Adding transactional method 'EmployeeDAO.addEmployee' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
08:08:06,764 DEBUG InfrastructureAdvisorAutoProxyCreator:540 - Creating implicit proxy for bean 'employeeDAO' with 0 common interceptors and 1 specific interceptors
08:08:06,769 DEBUG CglibAopProxy:156 - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.cognizant.dao.EmployeeDAO@79da1ec0]
08:08:06,816 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
08:08:06,819 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public void com.cognizant.dao.EmployeeDAO.addEmployee(com.cognizant.entity.Employee)
08:08:06,820 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.util.List com.cognizant.dao.EmployeeDAO.findEmployeesBySalary(double)
08:08:06,820 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public com.cognizant.entity.Employee com.cognizant.dao.EmployeeDAO.incrementSalary(int,double)
08:08:06,820 DEBUG CglibAopProxy:761 - Found finalize() method - using NO_OVERRIDE
08:08:06,821 DEBUG CglibAopProxy:773 - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
08:08:06,821 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
08:08:06,821 DEBUG CglibAopProxy:778 - Found 'hashCode' method: public native int java.lang.Object.hashCode()
08:08:06,821 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
08:08:06,821 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
08:08:06,821 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
08:08:06,822 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
08:08:06,822 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
08:08:06,822 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
08:08:06,822 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
08:08:06,822 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
08:08:06,822 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
08:08:06,823 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
08:08:06,823 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
08:08:06,823 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
08:08:06,824 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
08:08:06,824 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
08:08:06,824 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
08:08:06,824 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
08:08:06,825 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
08:08:06,825 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
08:08:06,825 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
08:08:06,826 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
08:08:06,826 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
08:08:06,826 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
08:08:06,826 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
08:08:06,827 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
08:08:06,852 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeDAO'
08:08:06,853 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeBO' to bean named 'employeeDAO'
08:08:06,853 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:06,854 DEBUG AnnotationTransactionAttributeSource:107 - Adding transactional method 'EmployeeBO.incrementSalary' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
08:08:06,855 DEBUG InfrastructureAdvisorAutoProxyCreator:540 - Creating implicit proxy for bean 'employeeBO' with 0 common interceptors and 1 specific interceptors
08:08:06,855 DEBUG CglibAopProxy:156 - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.cognizant.bo.EmployeeBO@2cb3d0f7]
08:08:06,856 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public void com.cognizant.bo.EmployeeBO.addEmployees(java.util.List) throws java.lang.Exception
08:08:06,857 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.util.List com.cognizant.bo.EmployeeBO.findEmployeesBySalary(double)
08:08:06,857 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public com.cognizant.entity.Employee com.cognizant.bo.EmployeeBO.incrementSalary(int,double) throws java.lang.Exception
08:08:06,858 DEBUG CglibAopProxy:761 - Found finalize() method - using NO_OVERRIDE
08:08:06,858 DEBUG CglibAopProxy:773 - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
08:08:06,859 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
08:08:06,859 DEBUG CglibAopProxy:778 - Found 'hashCode' method: public native int java.lang.Object.hashCode()
08:08:06,859 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
08:08:06,860 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
08:08:06,860 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
08:08:06,860 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
08:08:06,860 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
08:08:06,861 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
08:08:06,861 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
08:08:06,861 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
08:08:06,861 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
08:08:06,861 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
08:08:06,862 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
08:08:06,862 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
08:08:06,862 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
08:08:06,862 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
08:08:06,863 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
08:08:06,863 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
08:08:06,863 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
08:08:06,863 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
08:08:06,863 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
08:08:06,864 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
08:08:06,864 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
08:08:06,864 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
08:08:06,864 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
08:08:06,864 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
08:08:06,877 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeBO'
08:08:06,877 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeController'
08:08:06,877 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeController'
08:08:06,881 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.controller.EmployeeController]: AutowiredFieldElement for com.cognizant.service.EmployeeService com.cognizant.controller.EmployeeController.service
08:08:06,882 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeController' to allow for resolving potential circular references
08:08:06,883 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeController': AutowiredFieldElement for com.cognizant.service.EmployeeService com.cognizant.controller.EmployeeController.service
08:08:06,884 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeService'
08:08:06,884 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeService'
08:08:06,885 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.service.EmployeeService]: AutowiredFieldElement for com.cognizant.bo.EmployeeBO com.cognizant.service.EmployeeService.bo
08:08:06,885 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeService' to allow for resolving potential circular references
08:08:06,887 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeService': AutowiredFieldElement for com.cognizant.bo.EmployeeBO com.cognizant.service.EmployeeService.bo
08:08:06,887 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeBO'
08:08:06,888 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeService' to bean named 'employeeBO'
08:08:06,888 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:06,889 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeService'
08:08:06,889 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeController' to bean named 'employeeService'
08:08:06,890 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:06,893 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeController'
08:08:06,893 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeDAO'
08:08:06,893 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeService'
08:08:06,893 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'messageSource'
08:08:06,894 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'dataSource'
08:08:06,894 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
08:08:06,895 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'transactionManager'
08:08:06,895 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'transactionManager'
08:08:06,903 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
08:08:06,908 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
08:08:06,908 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'transactionManager'
08:08:06,910 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:06,911 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'transactionManager'
08:08:06,912 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
08:08:06,915 DEBUG GenericApplicationContext:863 - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@31e3250d]
08:08:06,915 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'lifecycleProcessor'
08:08:06,918 DEBUG PropertySourcesPropertyResolver:81 - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
08:08:06,919 DEBUG PropertySourcesPropertyResolver:81 - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
08:08:06,921 DEBUG PropertySourcesPropertyResolver:103 - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
08:08:06,921 DEBUG CacheAwareContextLoaderDelegate:97 - Storing ApplicationContext in cache under key [[MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
08:08:06,924 DEBUG cache:114 - Spring test ApplicationContext cache statistics: [ContextCache@6722db6e size = 1, hitCount = 0, missCount = 1, parentContextCount = 0]
08:08:06,928 DEBUG InjectionMetadata:86 - Processing injected element of bean 'test.java.TestEmployee': AutowiredFieldElement for com.cognizant.service.EmployeeService test.java.TestEmployee.service
08:08:06,928 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeService'
08:08:06,929 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'test.java.TestEmployee' to bean named 'employeeService'
08:08:06,929 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
08:08:06,937 DEBUG TestEmployee:74 - ONe Message ***
08:08:06,937  WARN TestEmployee:75 - Test *******
08:08:06,940 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'transactionManager'
08:08:06,946 DEBUG JpaTransactionManager:366 - Creating new transaction with name [com.cognizant.bo.EmployeeBO.incrementSalary]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
08:08:07,051 DEBUG JpaTransactionManager:368 - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@6e521c1e] for JPA transaction
08:08:07,054 DEBUG DriverManagerDataSource:162 - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/cogdb]
08:08:07,094 DEBUG JpaTransactionManager:400 - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@591e58fa]
08:08:07,147  WARN EmployeeDAO:42 - Id is : 1
08:08:07,212 TRACE BasicBinder:83 - binding parameter [1] as [INTEGER] - 1
08:08:07,222 TRACE BasicExtractor:72 - Found [Ravi] as column [name2_0_0_]
08:08:07,223 TRACE BasicExtractor:72 - Found [44344.44] as column [salary3_0_0_]
08:08:07,229 DEBUG EmployeeDAO:44 - Employee [id=1, name=Ravi, salary=44344.44]
08:08:07,230 DEBUG JpaTransactionManager:753 - Initiating transaction commit
08:08:07,230 DEBUG JpaTransactionManager:509 - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@6e521c1e]
08:08:07,253 TRACE BasicBinder:83 - binding parameter [1] as [VARCHAR] - Ravi
08:08:07,254 TRACE BasicBinder:83 - binding parameter [2] as [DOUBLE] - 49344.44
08:08:07,254 TRACE BasicBinder:83 - binding parameter [3] as [INTEGER] - 1
08:08:07,263 DEBUG JpaTransactionManager:595 - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@6e521c1e] after transaction
08:08:07,263 DEBUG EntityManagerFactoryUtils:338 - Closing JPA EntityManager
08:08:07,265  INFO TestEmployee:80 - Employee [id=1, name=Ravi, salary=49344.44]
08:08:07,266 DEBUG DirtiesContextTestExecutionListener:107 - After test method: context [[TestContext@2ed94a8b testClass = TestEmployee, testInstance = test.java.TestEmployee@38082d64, testMethod = testSalaryIncrement@TestEmployee, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
08:08:07,267 DEBUG DirtiesContextTestExecutionListener:138 - After test class: context [[TestContext@2ed94a8b testClass = TestEmployee, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dfd3711 testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
08:08:07,269  INFO GenericApplicationContext:1048 - Closing org.springframework.context.support.GenericApplicationContext@13c78c0b: startup date [Wed May 31 08:08:05 IST 2017]; root of context hierarchy
08:08:07,270 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'lifecycleProcessor'
08:08:07,270  INFO DefaultListableBeanFactory:444 - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@de3a06f: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
08:08:07,270 DEBUG DefaultListableBeanFactory:500 - Retrieved dependent beans for bean 'employeeService': [test.java.TestEmployee]
08:08:07,271 DEBUG DisposableBeanAdapter:227 - Invoking destroy() on bean with name 'entityManagerFactory'
08:08:07,271  INFO LocalContainerEntityManagerFactoryBean:441 - Closing JPA EntityManagerFactory for persistence unit 'jpaData'
08:08:07,272 DEBUG DefaultListableBeanFactory:500 - Retrieved dependent beans for bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#17695df3': [entityManagerFactory]
09:57:43,956 DEBUG SpringJUnit4ClassRunner:106 - SpringJUnit4ClassRunner constructor called with [class test.java.TestEmployee].
09:57:44,150 DEBUG AbstractDelegatingSmartContextLoader:90 - Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@7907ec20 declaringClass = 'test.java.TestEmployee', classes = '{}', locations = '{classpath:beans.xml}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
09:57:44,158 DEBUG ContextLoaderUtils:471 - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [test.java.TestEmployee]
09:57:44,161 DEBUG TestContextManager:186 - @TestExecutionListeners is not present for class [test.java.TestEmployee]: using defaults.
09:57:44,236 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
09:57:44,238 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
09:57:44,274 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
09:57:44,274 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
09:57:44,275 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
09:57:44,275 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
09:57:44,278 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
09:57:44,278 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
09:57:44,283 DEBUG ProfileValueUtils:68 - Retrieved @ProfileValueSourceConfiguration [null] for test class [test.java.TestEmployee]
09:57:44,283 DEBUG ProfileValueUtils:80 - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [test.java.TestEmployee]
09:57:44,287 DEBUG DependencyInjectionTestExecutionListener:73 - Performing dependency injection for test context [[TestContext@3b81a1bc testClass = TestEmployee, testInstance = test.java.TestEmployee@64616ca2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@13fee20c testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
09:57:44,288 DEBUG AbstractDelegatingSmartContextLoader:100 - Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@13fee20c testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
09:57:44,291 DEBUG AbstractGenericContextLoader:104 - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@13fee20c testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
09:57:44,559 DEBUG StandardEnvironment:108 - Adding [systemProperties] PropertySource with lowest search precedence
09:57:44,567 DEBUG StandardEnvironment:108 - Adding [systemEnvironment] PropertySource with lowest search precedence
09:57:44,567 DEBUG StandardEnvironment:127 - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
09:57:44,623  INFO XmlBeanDefinitionReader:316 - Loading XML bean definitions from class path resource [beans.xml]
09:57:44,650 DEBUG DefaultDocumentLoader:72 - Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
09:57:44,692 DEBUG PluggableSchemaResolver:140 - Loading schema mappings from [META-INF/spring.schemas]
09:57:44,714 DEBUG PluggableSchemaResolver:146 - Loaded schema mappings: {http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
09:57:44,716 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.2.xsd
09:57:44,779 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/tx/spring-tx.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.2.xsd
09:57:44,789 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.2.xsd
09:57:44,797 DEBUG PluggableSchemaResolver:118 - Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-3.2.xsd
09:57:44,821 DEBUG DefaultBeanDefinitionDocumentReader:99 - Loading bean definitions
09:57:44,857 DEBUG DefaultNamespaceHandlerResolver:156 - Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
09:57:45,050 DEBUG PathMatchingResourcePatternResolver:553 - Looking for matching resources in directory tree [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant]
09:57:45,050 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
09:57:45,053 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
09:57:45,054 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
09:57:45,056 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
09:57:45,056 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/entity] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
09:57:45,057 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/exception] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
09:57:45,058 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
09:57:45,059 DEBUG PathMatchingResourcePatternResolver:615 - Searching directory [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/vo] for files matching pattern [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/*/**/*.class]
09:57:45,062 DEBUG PathMatchingResourcePatternResolver:354 - Resolved location pattern [classpath*:com/cognizant/*/**/*.class] to resources [file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo/EmployeeBO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/ApplicationController.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/EmployeeController.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/ApplicationDAO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/EmployeeDAO.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/entity/Employee.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/exception/ApplicationException.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/ApplicationService.class], file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/EmployeeService.class]]
09:57:45,134 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/bo/EmployeeBO.class]
09:57:45,153 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/controller/EmployeeController.class]
09:57:45,157 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/dao/EmployeeDAO.class]
09:57:45,168 DEBUG ClassPathBeanDefinitionScanner:273 - Identified candidate component class: file [/Users/puneetvashisht/Downloads/BaseCodeSlice_MyAssessmentApplication/target/classes/com/cognizant/service/EmployeeService.class]
09:57:45,188 DEBUG BeanDefinitionParserDelegate:494 - Neither XML 'id' nor 'name' specified - using generated bean name [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#2df32bf7]
09:57:45,190 DEBUG XmlBeanDefinitionReader:216 - Loaded 17 bean definitions from location pattern [classpath:beans.xml]
09:57:45,193  INFO GenericApplicationContext:515 - Refreshing org.springframework.context.support.GenericApplicationContext@7f560810: startup date [Wed May 31 09:57:45 IST 2017]; root of context hierarchy
09:57:45,194 DEBUG GenericApplicationContext:545 - Bean factory for org.springframework.context.support.GenericApplicationContext@7f560810: org.springframework.beans.factory.support.DefaultListableBeanFactory@2a40cd94: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager]; root of factory hierarchy
09:57:45,276 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
09:57:45,277 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
09:57:45,327 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
09:57:45,331 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
09:57:45,418 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
09:57:45,418 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
09:57:45,419 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
09:57:45,419 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
09:57:45,420 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
09:57:45,420 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
09:57:45,421 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
09:57:45,422 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
09:57:45,424 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
09:57:45,424 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
09:57:45,438 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
09:57:45,438 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
09:57:45,439 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
09:57:45,439 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
09:57:45,440 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
09:57:45,440 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
09:57:45,440 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
09:57:45,440 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
09:57:45,440 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
09:57:45,441 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
09:57:45,441 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
09:57:45,441 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
09:57:45,476 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
09:57:45,514 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
09:57:45,515 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'messageSource'
09:57:45,516 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'messageSource'
09:57:45,523 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'messageSource' to allow for resolving potential circular references
09:57:45,530 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:45,530 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:45,531 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
09:57:45,559 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
09:57:45,559 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
09:57:45,560 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
09:57:45,562 DEBUG BeanFactoryAdvisorRetrievalHelper:87 - Skipping currently created advisor 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:45,567 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
09:57:45,568 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:45,573 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'messageSource'
09:57:45,573 DEBUG GenericApplicationContext:802 - Using MessageSource [org.springframework.context.support.ReloadableResourceBundleMessageSource: basenames=[]]
09:57:45,580 DEBUG GenericApplicationContext:836 - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@bef2d72]
09:57:45,584 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'entityManagerFactory'
09:57:45,584 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'entityManagerFactory'
09:57:45,645 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
09:57:45,655 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'dataSource'
09:57:45,655 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'dataSource'
09:57:45,659 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
09:57:45,675  INFO DriverManagerDataSource:153 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:57:45,675 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:45,677 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'dataSource'
09:57:45,677 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#2df32bf7'
09:57:45,713 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:45,715 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#2df32bf7'
09:57:45,721 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
09:57:45,750  INFO LocalContainerEntityManagerFactoryBean:287 - Building JPA container EntityManagerFactory for persistence unit 'jpaData'
09:57:45,844 DEBUG logging:143 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
09:57:46,006 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@74235045
09:57:46,007 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@74235045
09:57:46,008 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@74235045
09:57:46,014 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6771beb3
09:57:46,025 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@13c9d689
09:57:46,026 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4afcd809
09:57:46,031 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@75d4a5c2
09:57:46,032 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@75d4a5c2
09:57:46,033 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75d4a5c2
09:57:46,037 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@c730b35
09:57:46,037 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@c730b35
09:57:46,038 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c730b35
09:57:46,044 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3c41ed1d
09:57:46,044 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3c41ed1d
09:57:46,045 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c41ed1d
09:57:46,051 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6a6cb05c
09:57:46,055 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6a6cb05c
09:57:46,056 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6a6cb05c
09:57:46,064 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@5b12b668
09:57:46,064 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@5b12b668
09:57:46,065 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b12b668
09:57:46,073 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@44c03695
09:57:46,074 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@44c03695
09:57:46,074 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44c03695
09:57:46,082 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3fc2959f
09:57:46,082 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3fc2959f
09:57:46,082 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3fc2959f
09:57:46,088 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31190526
09:57:46,088 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31190526
09:57:46,092 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77c2494c
09:57:46,092 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77c2494c
09:57:46,096 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@1e800aaa
09:57:46,097 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1e800aaa
09:57:46,101 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3b0090a4
09:57:46,102 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@62ddbd7e
09:57:46,108 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@489115ef
09:57:46,108 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@489115ef
09:57:46,112 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@4e08711f
09:57:46,113 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e08711f
09:57:46,115 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@367ffa75
09:57:46,115 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@367ffa75
09:57:46,123 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5dda768f
09:57:46,123 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5dda768f
09:57:46,124 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5dda768f
09:57:46,127 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2aceadd4
09:57:46,131 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@279fedbd
09:57:46,132 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@279fedbd
09:57:46,132 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@279fedbd
09:57:46,133 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2925bf5b
09:57:46,136 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@6ad82709
09:57:46,137 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ad82709
09:57:46,140 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@b2c9a9c
09:57:46,141 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b2c9a9c
09:57:46,145 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@247bddad
09:57:46,146 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@247bddad
09:57:46,147 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@7d20d0b
09:57:46,147 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d20d0b
09:57:46,152 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@23348b5d
09:57:46,153 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@23348b5d
09:57:46,153 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7c9d8e2
09:57:46,154 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6f4a47c7
09:57:46,158 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@43c1b556
09:57:46,158 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@43c1b556
09:57:46,159 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@43c1b556
09:57:46,160 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4988d8b8
09:57:46,160 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4988d8b8
09:57:46,161 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4988d8b8
09:57:46,163 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@bccb269
09:57:46,168 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@158a8276
09:57:46,168 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@158a8276
09:57:46,169 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@158a8276
09:57:46,170 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4e50c791
09:57:46,170 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4e50c791
09:57:46,171 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4e50c791
09:57:46,172 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@4961f6af
09:57:46,173 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@707194ba
09:57:46,181 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@c86b9e3
09:57:46,181 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@c86b9e3
09:57:46,184 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@37271612
09:57:46,189 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@1ebd319f
09:57:46,190 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ebd319f
09:57:46,194 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@21b2e768
09:57:46,194 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@21b2e768
09:57:46,195 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2118cddf
09:57:46,196 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@76ed1b7c
09:57:46,197 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@fa36558
09:57:46,204 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@37f1104d
09:57:46,205 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37f1104d
09:57:46,206 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f54a33d
09:57:46,206 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1018bde2
09:57:46,206 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@65b3f4a4
09:57:46,207 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f2ff811
09:57:46,207 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@568ff82
09:57:46,208 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50caa560
09:57:46,208 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2a266d09
09:57:46,208 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5ab9e72c
09:57:46,408 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@74235045
09:57:46,408 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@74235045
09:57:46,409 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@74235045
09:57:46,409 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6771beb3
09:57:46,410 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@13c9d689
09:57:46,410 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4afcd809
09:57:46,410 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@75d4a5c2
09:57:46,411 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@75d4a5c2
09:57:46,411 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@75d4a5c2
09:57:46,411 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@c730b35
09:57:46,412 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@c730b35
09:57:46,412 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c730b35
09:57:46,412 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3c41ed1d
09:57:46,412 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3c41ed1d
09:57:46,413 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c41ed1d
09:57:46,413 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@6a6cb05c
09:57:46,413 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@6a6cb05c
09:57:46,414 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6a6cb05c
09:57:46,414 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@5b12b668
09:57:46,414 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@5b12b668
09:57:46,415 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b12b668
09:57:46,415 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@44c03695
09:57:46,415 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@44c03695
09:57:46,416 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44c03695
09:57:46,416 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3fc2959f
09:57:46,417 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@3fc2959f
09:57:46,417 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3fc2959f
09:57:46,417 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31190526
09:57:46,418 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31190526
09:57:46,418 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77c2494c
09:57:46,418 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77c2494c
09:57:46,419 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@1e800aaa
09:57:46,419 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1e800aaa
09:57:46,419 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3b0090a4
09:57:46,419 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@62ddbd7e
09:57:46,420 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@489115ef
09:57:46,420 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@489115ef
09:57:46,420 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@4e08711f
09:57:46,421 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4e08711f
09:57:46,421 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@367ffa75
09:57:46,421 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@367ffa75
09:57:46,422 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5dda768f
09:57:46,422 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5dda768f
09:57:46,422 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5dda768f
09:57:46,423 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2aceadd4
09:57:46,423 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@279fedbd
09:57:46,423 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@279fedbd
09:57:46,424 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@279fedbd
09:57:46,424 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2925bf5b
09:57:46,424 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@6ad82709
09:57:46,425 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ad82709
09:57:46,425 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@b2c9a9c
09:57:46,425 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@b2c9a9c
09:57:46,426 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@247bddad
09:57:46,426 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@247bddad
09:57:46,427 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@7d20d0b
09:57:46,427 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d20d0b
09:57:46,427 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@23348b5d
09:57:46,428 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@23348b5d
09:57:46,428 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7c9d8e2
09:57:46,428 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6f4a47c7
09:57:46,428 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@43c1b556
09:57:46,429 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@43c1b556
09:57:46,429 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@43c1b556
09:57:46,429 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4988d8b8
09:57:46,430 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4988d8b8
09:57:46,430 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4988d8b8
09:57:46,430 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@bccb269
09:57:46,431 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@158a8276
09:57:46,431 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@158a8276
09:57:46,432 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@158a8276
09:57:46,433 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4e50c791
09:57:46,433 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4e50c791
09:57:46,433 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4e50c791
09:57:46,434 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@4961f6af
09:57:46,435 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@707194ba
09:57:46,435 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@c86b9e3
09:57:46,435 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@c86b9e3
09:57:46,436 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@37271612
09:57:46,436 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@1ebd319f
09:57:46,436 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1ebd319f
09:57:46,437 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@21b2e768
09:57:46,437 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@21b2e768
09:57:46,437 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2118cddf
09:57:46,438 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@76ed1b7c
09:57:46,438 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@fa36558
09:57:46,438 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@37f1104d
09:57:46,439 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@37f1104d
09:57:46,439 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ea6147e
09:57:46,440 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d02f94e
09:57:46,440 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b48a640
09:57:46,440 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1e683a3e
09:57:46,442 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2053d869
09:57:46,442 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7a419da4
09:57:46,443 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14555e0a
09:57:46,443 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4bb33f74
09:57:47,185 DEBUG DriverManagerDataSource:162 - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/cogdb]
09:57:47,803 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@7749bf93
09:57:48,712 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:48,714 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'entityManagerFactory'
09:57:48,715  INFO DefaultListableBeanFactory:603 - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a40cd94: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
09:57:48,715 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
09:57:48,716 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
09:57:48,716 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
09:57:48,716 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
09:57:48,719 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
09:57:48,727 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
09:57:48,728 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
09:57:48,728 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
09:57:48,728 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:48,729 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
09:57:48,729 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
09:57:48,729 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
09:57:48,729 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
09:57:48,729 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
09:57:48,730 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeBO'
09:57:48,730 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeBO'
09:57:48,737 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.bo.EmployeeBO]: AutowiredFieldElement for private com.cognizant.dao.EmployeeDAO com.cognizant.bo.EmployeeBO.employeeDAO
09:57:48,738 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeBO' to allow for resolving potential circular references
09:57:48,740 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeBO': AutowiredFieldElement for private com.cognizant.dao.EmployeeDAO com.cognizant.bo.EmployeeBO.employeeDAO
09:57:48,742 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeDAO'
09:57:48,742 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeDAO'
09:57:48,749 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.dao.EmployeeDAO]: PersistenceElement for private javax.persistence.EntityManager com.cognizant.dao.EmployeeDAO.em
09:57:48,750 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeDAO' to allow for resolving potential circular references
09:57:48,752 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeDAO': PersistenceElement for private javax.persistence.EntityManager com.cognizant.dao.EmployeeDAO.em
09:57:48,752 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
09:57:48,753 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:48,769 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:48,771 DEBUG AnnotationTransactionAttributeSource:107 - Adding transactional method 'EmployeeDAO.addEmployee' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
09:57:48,785 DEBUG InfrastructureAdvisorAutoProxyCreator:540 - Creating implicit proxy for bean 'employeeDAO' with 0 common interceptors and 1 specific interceptors
09:57:48,817 DEBUG CglibAopProxy:156 - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.cognizant.dao.EmployeeDAO@61526469]
09:57:48,953 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
09:57:48,958 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.util.List com.cognizant.dao.EmployeeDAO.findEmployeesBySalary(double)
09:57:48,959 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public com.cognizant.entity.Employee com.cognizant.dao.EmployeeDAO.incrementSalary(int,double)
09:57:48,961 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public void com.cognizant.dao.EmployeeDAO.addEmployee(com.cognizant.entity.Employee)
09:57:48,962 DEBUG CglibAopProxy:761 - Found finalize() method - using NO_OVERRIDE
09:57:48,963 DEBUG CglibAopProxy:773 - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
09:57:48,963 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
09:57:48,964 DEBUG CglibAopProxy:778 - Found 'hashCode' method: public native int java.lang.Object.hashCode()
09:57:48,966 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
09:57:48,966 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
09:57:48,967 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
09:57:48,969 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
09:57:48,969 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
09:57:48,970 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
09:57:48,970 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
09:57:48,971 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
09:57:48,971 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
09:57:48,971 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
09:57:48,971 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
09:57:48,972 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
09:57:48,972 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
09:57:48,972 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
09:57:48,973 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
09:57:48,973 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
09:57:48,973 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
09:57:48,973 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
09:57:48,974 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
09:57:48,974 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
09:57:48,974 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
09:57:48,974 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
09:57:48,974 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
09:57:48,974 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
09:57:49,007 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeDAO'
09:57:49,008 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeBO' to bean named 'employeeDAO'
09:57:49,008 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:49,009 DEBUG AnnotationTransactionAttributeSource:107 - Adding transactional method 'EmployeeBO.incrementSalary' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
09:57:49,009 DEBUG InfrastructureAdvisorAutoProxyCreator:540 - Creating implicit proxy for bean 'employeeBO' with 0 common interceptors and 1 specific interceptors
09:57:49,010 DEBUG CglibAopProxy:156 - Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.cognizant.bo.EmployeeBO@6fa590ba]
09:57:49,011 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public void com.cognizant.bo.EmployeeBO.addEmployees(java.util.List) throws java.lang.Exception
09:57:49,011 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.util.List com.cognizant.bo.EmployeeBO.findEmployeesBySalary(double)
09:57:49,011 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public com.cognizant.entity.Employee com.cognizant.bo.EmployeeBO.incrementSalary(int,double) throws java.lang.Exception
09:57:49,012 DEBUG CglibAopProxy:761 - Found finalize() method - using NO_OVERRIDE
09:57:49,012 DEBUG CglibAopProxy:773 - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
09:57:49,012 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
09:57:49,013 DEBUG CglibAopProxy:778 - Found 'hashCode' method: public native int java.lang.Object.hashCode()
09:57:49,013 DEBUG CglibAopProxy:810 - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
09:57:49,014 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
09:57:49,014 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
09:57:49,014 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
09:57:49,014 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
09:57:49,015 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
09:57:49,015 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
09:57:49,015 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
09:57:49,015 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
09:57:49,015 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
09:57:49,016 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
09:57:49,016 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
09:57:49,016 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
09:57:49,017 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
09:57:49,017 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
09:57:49,017 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
09:57:49,018 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
09:57:49,018 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
09:57:49,018 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
09:57:49,019 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
09:57:49,019 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
09:57:49,019 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
09:57:49,019 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
09:57:49,019 DEBUG CglibAopProxy:767 - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
09:57:49,031 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeBO'
09:57:49,031 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeController'
09:57:49,032 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeController'
09:57:49,035 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.controller.EmployeeController]: AutowiredFieldElement for com.cognizant.service.EmployeeService com.cognizant.controller.EmployeeController.service
09:57:49,036 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeController' to allow for resolving potential circular references
09:57:49,037 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeController': AutowiredFieldElement for com.cognizant.service.EmployeeService com.cognizant.controller.EmployeeController.service
09:57:49,038 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'employeeService'
09:57:49,038 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'employeeService'
09:57:49,039 DEBUG InjectionMetadata:72 - Registered injected element on class [com.cognizant.service.EmployeeService]: AutowiredFieldElement for com.cognizant.bo.EmployeeBO com.cognizant.service.EmployeeService.bo
09:57:49,039 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'employeeService' to allow for resolving potential circular references
09:57:49,041 DEBUG InjectionMetadata:86 - Processing injected element of bean 'employeeService': AutowiredFieldElement for com.cognizant.bo.EmployeeBO com.cognizant.service.EmployeeService.bo
09:57:49,042 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeBO'
09:57:49,042 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeService' to bean named 'employeeBO'
09:57:49,042 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:49,043 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeService'
09:57:49,043 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'employeeController' to bean named 'employeeService'
09:57:49,044 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:49,046 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'employeeController'
09:57:49,046 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeDAO'
09:57:49,046 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeService'
09:57:49,046 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'messageSource'
09:57:49,046 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'dataSource'
09:57:49,047 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
09:57:49,047 DEBUG DefaultListableBeanFactory:215 - Creating shared instance of singleton bean 'transactionManager'
09:57:49,047 DEBUG DefaultListableBeanFactory:432 - Creating instance of bean 'transactionManager'
09:57:49,060 DEBUG DefaultListableBeanFactory:506 - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
09:57:49,065 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'entityManagerFactory'
09:57:49,065 DEBUG DefaultListableBeanFactory:1557 - Invoking afterPropertiesSet() on bean with name 'transactionManager'
09:57:49,072 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:49,073 DEBUG DefaultListableBeanFactory:460 - Finished creating instance of bean 'transactionManager'
09:57:49,073 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
09:57:49,078 DEBUG GenericApplicationContext:863 - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@62923ee6]
09:57:49,078 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'lifecycleProcessor'
09:57:49,084 DEBUG PropertySourcesPropertyResolver:81 - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
09:57:49,084 DEBUG PropertySourcesPropertyResolver:81 - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
09:57:49,085 DEBUG PropertySourcesPropertyResolver:103 - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
09:57:49,085 DEBUG CacheAwareContextLoaderDelegate:97 - Storing ApplicationContext in cache under key [[MergedContextConfiguration@13fee20c testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]
09:57:49,086 DEBUG cache:114 - Spring test ApplicationContext cache statistics: [ContextCache@3bde62ff size = 1, hitCount = 0, missCount = 1, parentContextCount = 0]
09:57:49,087 DEBUG InjectionMetadata:86 - Processing injected element of bean 'test.java.TestEmployee': AutowiredFieldElement for com.cognizant.service.EmployeeService test.java.TestEmployee.service
09:57:49,088 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'employeeService'
09:57:49,089 DEBUG AutowiredAnnotationBeanPostProcessor:450 - Autowiring by type from bean name 'test.java.TestEmployee' to bean named 'employeeService'
09:57:49,089 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
09:57:49,095 DEBUG TestEmployee:74 - ONe Message ***
09:57:49,095  WARN TestEmployee:75 - Test *******
09:57:49,101 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'transactionManager'
09:57:49,112 DEBUG JpaTransactionManager:366 - Creating new transaction with name [com.cognizant.bo.EmployeeBO.incrementSalary]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
09:57:49,218 DEBUG JpaTransactionManager:368 - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@6815c5f2] for JPA transaction
09:57:49,222 DEBUG DriverManagerDataSource:162 - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/cogdb]
09:57:49,238 DEBUG JpaTransactionManager:400 - Exposing JPA transaction as JDBC transaction [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@2af616d3]
09:57:49,303  WARN EmployeeDAO:42 - Id is : 1
09:57:49,373 TRACE BasicBinder:83 - binding parameter [1] as [INTEGER] - 1
09:57:49,394 TRACE BasicExtractor:72 - Found [Ravi] as column [name2_0_0_]
09:57:49,396 TRACE BasicExtractor:72 - Found [49344.44] as column [salary3_0_0_]
09:57:49,402 DEBUG EmployeeDAO:44 - Employee [id=1, name=Ravi, salary=49344.44]
09:57:49,403 DEBUG JpaTransactionManager:753 - Initiating transaction commit
09:57:49,403 DEBUG JpaTransactionManager:509 - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@6815c5f2]
09:57:49,470 TRACE BasicBinder:83 - binding parameter [1] as [VARCHAR] - Ravi
09:57:49,471 TRACE BasicBinder:83 - binding parameter [2] as [DOUBLE] - 54344.44
09:57:49,472 TRACE BasicBinder:83 - binding parameter [3] as [INTEGER] - 1
09:57:49,482 DEBUG JpaTransactionManager:595 - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@6815c5f2] after transaction
09:57:49,483 DEBUG EntityManagerFactoryUtils:338 - Closing JPA EntityManager
09:57:49,485  INFO TestEmployee:80 - Employee [id=1, name=Ravi, salary=54344.44]
09:57:49,486 DEBUG DirtiesContextTestExecutionListener:107 - After test method: context [[TestContext@3b81a1bc testClass = TestEmployee, testInstance = test.java.TestEmployee@64616ca2, testMethod = testSalaryIncrement@TestEmployee, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@13fee20c testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
09:57:49,487 DEBUG DirtiesContextTestExecutionListener:138 - After test class: context [[TestContext@3b81a1bc testClass = TestEmployee, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@13fee20c testClass = TestEmployee, locations = '{classpath:beans.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
09:57:49,498  INFO GenericApplicationContext:1048 - Closing org.springframework.context.support.GenericApplicationContext@7f560810: startup date [Wed May 31 09:57:45 IST 2017]; root of context hierarchy
09:57:49,501 DEBUG DefaultListableBeanFactory:243 - Returning cached instance of singleton bean 'lifecycleProcessor'
09:57:49,501  INFO DefaultListableBeanFactory:444 - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2a40cd94: defining beans [org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,employeeBO,employeeController,employeeDAO,employeeService,messageSource,dataSource,entityManagerFactory,transactionManager,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
09:57:49,502 DEBUG DefaultListableBeanFactory:500 - Retrieved dependent beans for bean 'employeeService': [test.java.TestEmployee]
09:57:49,502 DEBUG DisposableBeanAdapter:227 - Invoking destroy() on bean with name 'entityManagerFactory'
09:57:49,503  INFO LocalContainerEntityManagerFactoryBean:441 - Closing JPA EntityManagerFactory for persistence unit 'jpaData'
09:57:49,503 DEBUG DefaultListableBeanFactory:500 - Retrieved dependent beans for bean 'org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter#2df32bf7': [entityManagerFactory]
09:59:58,159 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@65fb9ffc
09:59:58,162 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@65fb9ffc
09:59:58,162 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@65fb9ffc
09:59:58,164 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fe94a96
09:59:58,166 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e0e82ae
09:59:58,167 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b2ea799
09:59:58,170 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@62379589
09:59:58,170 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@62379589
09:59:58,171 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@62379589
09:59:58,173 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@776aec5c
09:59:58,173 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@776aec5c
09:59:58,174 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@776aec5c
09:59:58,176 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3c46e67a
09:59:58,177 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3c46e67a
09:59:58,177 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46e67a
09:59:58,179 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@36ebc363
09:59:58,183 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@36ebc363
09:59:58,183 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36ebc363
09:59:58,185 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@22ff4249
09:59:58,185 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@22ff4249
09:59:58,185 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@22ff4249
09:59:58,187 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@815b41f
09:59:58,188 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@815b41f
09:59:58,188 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@815b41f
09:59:58,190 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6a78afa0
09:59:58,191 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6a78afa0
09:59:58,191 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a78afa0
09:59:58,193 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@682b2fa
09:59:58,194 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@682b2fa
09:59:58,195 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@662ac478
09:59:58,195 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@662ac478
09:59:58,197 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@f5958c9
09:59:58,198 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@f5958c9
09:59:58,199 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@185a6e9
09:59:58,200 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3cd3e762
09:59:58,202 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@74e52ef6
09:59:58,202 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@74e52ef6
09:59:58,205 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@3bf7ca37
09:59:58,205 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3bf7ca37
09:59:58,207 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@302552ec
09:59:58,208 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@302552ec
09:59:58,210 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1c1bbc4e
09:59:58,210 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1c1bbc4e
09:59:58,210 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1c1bbc4e
09:59:58,213 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ce24091
09:59:58,215 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@24aed80c
09:59:58,215 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24aed80c
09:59:58,216 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24aed80c
09:59:58,217 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@752325ad
09:59:58,219 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@710f4dc7
09:59:58,219 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@710f4dc7
09:59:58,222 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@510f3d34
09:59:58,222 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@510f3d34
09:59:58,224 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4c178a76
09:59:58,225 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4c178a76
09:59:58,226 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@d35dea7
09:59:58,226 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d35dea7
09:59:58,228 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@131ef10
09:59:58,229 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@131ef10
09:59:58,230 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2df3b89c
09:59:58,232 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@20d525
09:59:58,234 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@ae13544
09:59:58,236 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@ae13544
09:59:58,237 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@ae13544
09:59:58,240 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@587e5365
09:59:58,242 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@587e5365
09:59:58,243 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@587e5365
09:59:58,245 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@c0c2f8d
09:59:58,247 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@609cd4d8
09:59:58,247 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@609cd4d8
09:59:58,248 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@609cd4d8
09:59:58,249 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c3d9b6b
09:59:58,250 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c3d9b6b
09:59:58,250 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c3d9b6b
09:59:58,252 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@7530ad9c
09:59:58,253 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@5aebe890
09:59:58,259 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@757277dc
09:59:58,259 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@757277dc
09:59:58,261 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6aaceffd
09:59:58,266 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@117e949d
09:59:58,267 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@117e949d
09:59:58,271 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@175b9425
09:59:58,272 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@175b9425
09:59:58,273 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a03bcb1
09:59:58,274 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5609159b
09:59:58,276 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@11fc564b
09:59:58,280 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@4470f8a6
09:59:58,281 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4470f8a6
09:59:58,282 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@740773a3
09:59:58,282 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37f1104d
09:59:58,282 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55740540
09:59:58,283 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@60015ef5
09:59:58,284 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f54a33d
09:59:58,285 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1018bde2
09:59:58,285 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65b3f4a4
09:59:58,286 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f2ff811
09:59:58,344 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@65fb9ffc
09:59:58,344 DEBUG BasicTypeRegistry:148 - Adding type registration boolean -> org.hibernate.type.BooleanType@65fb9ffc
09:59:58,345 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@65fb9ffc
09:59:58,345 DEBUG BasicTypeRegistry:148 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fe94a96
09:59:58,345 DEBUG BasicTypeRegistry:148 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e0e82ae
09:59:58,346 DEBUG BasicTypeRegistry:148 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b2ea799
09:59:58,346 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@62379589
09:59:58,346 DEBUG BasicTypeRegistry:148 - Adding type registration byte -> org.hibernate.type.ByteType@62379589
09:59:58,346 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@62379589
09:59:58,347 DEBUG BasicTypeRegistry:148 - Adding type registration character -> org.hibernate.type.CharacterType@776aec5c
09:59:58,347 DEBUG BasicTypeRegistry:148 - Adding type registration char -> org.hibernate.type.CharacterType@776aec5c
09:59:58,348 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@776aec5c
09:59:58,350 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3c46e67a
09:59:58,351 DEBUG BasicTypeRegistry:148 - Adding type registration short -> org.hibernate.type.ShortType@3c46e67a
09:59:58,352 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46e67a
09:59:58,352 DEBUG BasicTypeRegistry:148 - Adding type registration integer -> org.hibernate.type.IntegerType@36ebc363
09:59:58,353 DEBUG BasicTypeRegistry:148 - Adding type registration int -> org.hibernate.type.IntegerType@36ebc363
09:59:58,354 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36ebc363
09:59:58,354 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@22ff4249
09:59:58,355 DEBUG BasicTypeRegistry:148 - Adding type registration long -> org.hibernate.type.LongType@22ff4249
09:59:58,355 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@22ff4249
09:59:58,355 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@815b41f
09:59:58,356 DEBUG BasicTypeRegistry:148 - Adding type registration float -> org.hibernate.type.FloatType@815b41f
09:59:58,357 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@815b41f
09:59:58,357 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6a78afa0
09:59:58,357 DEBUG BasicTypeRegistry:148 - Adding type registration double -> org.hibernate.type.DoubleType@6a78afa0
09:59:58,360 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6a78afa0
09:59:58,360 DEBUG BasicTypeRegistry:148 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@682b2fa
09:59:58,361 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@682b2fa
09:59:58,362 DEBUG BasicTypeRegistry:148 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@662ac478
09:59:58,362 DEBUG BasicTypeRegistry:148 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@662ac478
09:59:58,362 DEBUG BasicTypeRegistry:148 - Adding type registration string -> org.hibernate.type.StringType@f5958c9
09:59:58,363 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.String -> org.hibernate.type.StringType@f5958c9
09:59:58,364 DEBUG BasicTypeRegistry:148 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@185a6e9
09:59:58,365 DEBUG BasicTypeRegistry:148 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3cd3e762
09:59:58,365 DEBUG BasicTypeRegistry:148 - Adding type registration url -> org.hibernate.type.UrlType@74e52ef6
09:59:58,365 DEBUG BasicTypeRegistry:148 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@74e52ef6
09:59:58,366 DEBUG BasicTypeRegistry:148 - Adding type registration date -> org.hibernate.type.DateType@3bf7ca37
09:59:58,366 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3bf7ca37
09:59:58,367 DEBUG BasicTypeRegistry:148 - Adding type registration time -> org.hibernate.type.TimeType@302552ec
09:59:58,367 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@302552ec
09:59:58,368 DEBUG BasicTypeRegistry:148 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1c1bbc4e
09:59:58,368 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1c1bbc4e
09:59:58,368 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1c1bbc4e
09:59:58,369 DEBUG BasicTypeRegistry:148 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ce24091
09:59:58,369 DEBUG BasicTypeRegistry:148 - Adding type registration calendar -> org.hibernate.type.CalendarType@24aed80c
09:59:58,370 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@24aed80c
09:59:58,370 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@24aed80c
09:59:58,370 DEBUG BasicTypeRegistry:148 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@752325ad
09:59:58,371 DEBUG BasicTypeRegistry:148 - Adding type registration locale -> org.hibernate.type.LocaleType@710f4dc7
09:59:58,371 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@710f4dc7
09:59:58,371 DEBUG BasicTypeRegistry:148 - Adding type registration currency -> org.hibernate.type.CurrencyType@510f3d34
09:59:58,371 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@510f3d34
09:59:58,372 DEBUG BasicTypeRegistry:148 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4c178a76
09:59:58,373 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4c178a76
09:59:58,373 DEBUG BasicTypeRegistry:148 - Adding type registration class -> org.hibernate.type.ClassType@d35dea7
09:59:58,374 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d35dea7
09:59:58,374 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@131ef10
09:59:58,375 DEBUG BasicTypeRegistry:148 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@131ef10
09:59:58,375 DEBUG BasicTypeRegistry:148 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2df3b89c
09:59:58,376 DEBUG BasicTypeRegistry:148 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@20d525
09:59:58,376 DEBUG BasicTypeRegistry:148 - Adding type registration binary -> org.hibernate.type.BinaryType@ae13544
09:59:58,377 DEBUG BasicTypeRegistry:148 - Adding type registration byte[] -> org.hibernate.type.BinaryType@ae13544
09:59:58,378 DEBUG BasicTypeRegistry:148 - Adding type registration [B -> org.hibernate.type.BinaryType@ae13544
09:59:58,380 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@587e5365
09:59:58,381 DEBUG BasicTypeRegistry:148 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@587e5365
09:59:58,381 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@587e5365
09:59:58,382 DEBUG BasicTypeRegistry:148 - Adding type registration image -> org.hibernate.type.ImageType@c0c2f8d
09:59:58,383 DEBUG BasicTypeRegistry:148 - Adding type registration characters -> org.hibernate.type.CharArrayType@609cd4d8
09:59:58,383 DEBUG BasicTypeRegistry:148 - Adding type registration char[] -> org.hibernate.type.CharArrayType@609cd4d8
09:59:58,384 DEBUG BasicTypeRegistry:148 - Adding type registration [C -> org.hibernate.type.CharArrayType@609cd4d8
09:59:58,384 DEBUG BasicTypeRegistry:148 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c3d9b6b
09:59:58,385 DEBUG BasicTypeRegistry:148 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c3d9b6b
09:59:58,386 DEBUG BasicTypeRegistry:148 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c3d9b6b
09:59:58,386 DEBUG BasicTypeRegistry:148 - Adding type registration text -> org.hibernate.type.TextType@7530ad9c
09:59:58,386 DEBUG BasicTypeRegistry:148 - Adding type registration ntext -> org.hibernate.type.NTextType@5aebe890
09:59:58,387 DEBUG BasicTypeRegistry:148 - Adding type registration blob -> org.hibernate.type.BlobType@757277dc
09:59:58,387 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@757277dc
09:59:58,388 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6aaceffd
09:59:58,389 DEBUG BasicTypeRegistry:148 - Adding type registration clob -> org.hibernate.type.ClobType@117e949d
09:59:58,389 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@117e949d
09:59:58,390 DEBUG BasicTypeRegistry:148 - Adding type registration nclob -> org.hibernate.type.NClobType@175b9425
09:59:58,390 DEBUG BasicTypeRegistry:148 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@175b9425
09:59:58,391 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a03bcb1
09:59:58,391 DEBUG BasicTypeRegistry:148 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5609159b
09:59:58,392 DEBUG BasicTypeRegistry:148 - Adding type registration serializable -> org.hibernate.type.SerializableType@11fc564b
09:59:58,392 DEBUG BasicTypeRegistry:148 - Adding type registration object -> org.hibernate.type.ObjectType@4470f8a6
09:59:58,393 DEBUG BasicTypeRegistry:148 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4470f8a6
09:59:58,393 DEBUG BasicTypeRegistry:148 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ea9e1e2
09:59:58,393 DEBUG BasicTypeRegistry:148 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@24fcf36f
09:59:58,393 DEBUG BasicTypeRegistry:148 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10feca44
09:59:58,394 DEBUG BasicTypeRegistry:148 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3fb1549b
09:59:58,394 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@ea6147e
09:59:58,395 DEBUG BasicTypeRegistry:148 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d02f94e
09:59:58,395 DEBUG BasicTypeRegistry:148 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2b48a640
09:59:58,396 DEBUG BasicTypeRegistry:148 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1e683a3e
09:59:58,967 TRACE TypeFactory:72 - Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@38aa816f
09:59:59,569  WARN TestEmployee:75 - Test *******
09:59:59,731  WARN EmployeeDAO:42 - Id is : 1
09:59:59,775 TRACE BasicBinder:83 - binding parameter [1] as [INTEGER] - 1
09:59:59,784 TRACE BasicExtractor:72 - Found [Ravi] as column [name2_0_0_]
09:59:59,785 TRACE BasicExtractor:72 - Found [54344.44] as column [salary3_0_0_]
09:59:59,829 TRACE BasicBinder:83 - binding parameter [1] as [VARCHAR] - Ravi
09:59:59,833 TRACE BasicBinder:83 - binding parameter [2] as [DOUBLE] - 59344.44
09:59:59,833 TRACE BasicBinder:83 - binding parameter [3] as [INTEGER] - 1
